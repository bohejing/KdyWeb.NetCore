function isMobile() { var e = !1; return function (t) { (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(t) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0, 4))) && (e = !0) }(navigator.userAgent || navigator.vendor || window.opera), e } function createCORSRequest(e, t) { var a = new XMLHttpRequest; return "withCredentials" in a ? a.open(e, t, !0) : "undefined" != typeof XDomainRequest ? (a = new XDomainRequest, a.open(e, t)) : a = null, a } Array.from = Array.from || function (e) { return [].slice.call(e) }, function () { var e = null, t = function (t, a, i) { null == i && (i = function () { }), null != e && (e.abort(), e = null), e = new XMLHttpRequest, e.open("GET", t, !0), e.send(); var n = a; e.onreadystatechange = function () { if (4 == e.readyState && 200 == e.status) { if ("Microsoft Internet Explorer" == navigator.appName) { var t = new ActiveXObject("Microsoft.XMLDOM"); t.async = !1, t.loadXML(e.responseText), n.load(BilibiliParser(t)), i() } else { var a, o = null == e.responseXML ? (new window.DOMParser).parseFromString(e.responseText, "text/xml") : e.responseXML; 0 == o.getElementsByTagName("parsererror").length ? a = BilibiliParser(o) : (console.warn("XML解析失败，尝试纯文本解析"), a = BilibiliParser(null, e.response)), n.load(a), shield.shield(), i() } e = null } } }; window.CommentLoader = t }(); var ABP = { version: "0.8.0" }; (function () {
    "use strict"; if (ABP) {
        var e = jQuery, t = window.setTimeout, a = window.clearTimeout, i = "addEventListener", n = "HTML5 Player ver.170912", o = [0, 0], l = function (e) { var t = o; return o = [e.clientX, e.clientY], !(t[0] == o[0] && t[1] == o[1]) }, s = function (e) { return document.getElementById(e) }, r = function (e, t, a) { var i = null; if ("text" === e) return document.createTextNode(t); i = document.createElement(e); for (var n in t) if ("style" === n) for (var o in t.style) i.style[o] = t.style[o]; else if ("className" === n) i.className = t[n]; else if ("event" === n) for (var o in t.event) i.addEventListener(o, t.event[o]); else i.setAttribute(n, t[n]); if (a) for (var l = 0; l < a.length; l++) null != a[l] && i.appendChild(a[l]); return i }, c = function (e, t) { for (; e; e = e.parentNode) if (h(e.parentNode, t)) return e }; HTMLElement.prototype.tooltip = function (e) { this.tooltipData = e, this.dispatchEvent(new Event("updatetooltip")) }, "undefined" == typeof HTMLElement.prototype.requestFullScreen && (HTMLElement.prototype.requestFullScreen = function () { this.webkitRequestFullscreen ? this.webkitRequestFullscreen() : this.mozRequestFullScreen ? this.mozRequestFullScreen() : this.msRequestFullscreen && this.msRequestFullscreen() }), "undefined" == typeof document.isFullScreen && (document.isFullScreen = function () { return document.webkitIsFullScreen || document.mozFullScreen || document.msFullscreenEnabled }), "undefined" == typeof document.exitFullscreen && (document.exitFullscreen = function () { document.webkitExitFullscreen ? document.webkitExitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : window.msExitFullscreen && msExitFullscreen() }); var d = function (e, t) { t = t || 2; for (var a = "" + e; a.length < t;) a = "0" + a; return a }, m = function (e, t) { for (var a = "", i = 1; i <= t - (e + "").length; i++) a += "0"; return a + e }, u = function (e, t) { if (0 == e) return lang.oneDay; var a, i, n, o, l, s, r = new Date(1e3 * parseInt(e)); return a = String(r.getFullYear()), i = String(r.getMonth() + 1), 1 == i.length && (i = "0" + i), n = String(r.getDate()), 1 == n.length && (n = "0" + n), o = String(r.getHours()), 1 == o.length && (o = "0" + o), l = String(r.getMinutes()), 1 == l.length && (l = "0" + l), s = String(r.getSeconds()), 1 == s.length && (s = "0" + s), t ? String(i + "-" + n + " " + o + ":" + l) : String(a + "-" + i + "-" + n + " " + o + ":" + l + ":" + s) }, p = function (e) { return isNaN(e) ? "00:00" : m(parseInt(e / 60), 2) + ":" + m(parseInt(e % 60), 2) }, v = function (e) { for (var t = e.split(":"), a = 0, i = 0; i < t.length; i++) { a *= 60; var n = parseInt(t[i]); if (isNaN(n) || n < 0) return !1; a += n } return a }, f = function (e, n, o) { if (e) { e[i]("mousemove", function (t) { var a, i = s("ABP-Tooltip"), l = e.clientWidth, d = e.clientHeight, m = e.getBoundingClientRect(), u = c(e, "ABP-Unit").parentNode, p = u.getBoundingClientRect(), v = m.top - p.top, f = n ? t.clientX - p.left : m.left - p.left, g = f; null == i && (i = r("div", { id: "ABP-Tooltip" }, [r("text", e.tooltipData)]), i.by = e, u.appendChild(i), i.style.top = v + d + 2 + "px", i.style.left = f + l / 2 - i.clientWidth / 2 + "px", g += l / 2 - i.clientWidth / 2), n && (i.style.left = f - i.clientWidth / 2 + "px", g -= l / 2), a = i.getBoundingClientRect(), a.left < p.left ? i.style.left = "0px" : a.right > p.right && (i.style.left = p.width - a.width + "px"), o = o || -6, o && (i.style.top = v - i.clientHeight + 2 + o + "px") }); var l = function () { var e = s("ABP-Tooltip"); e && e.parentNode && e.remove() }, d = null; e[i]("mouseout", l), e[i]("touchend", function () { null != d && (a(d), d = null), d = t(function () { d = null, l() }, 2e3) }), e[i]("updatetooltip", function (t) { var a = s("ABP-Tooltip"); a && a.by == t.target && (a.textContent = e.tooltipData) }) } }, g = function (e, t) { if (null != e) { var a = e.className.split(" "); "" == a[0] && (a = []), a.indexOf(t) < 0 && a.push(t), e.className = a.join(" ") } }, h = function (e, t) { if (null == e) return !1; var a = e.className.split(" "); return "" == a[0] && (a = []), a.indexOf(t) >= 0 }, y = function (e, t) { if (null != e) { var a = e.className.split(" "); "" == a[0] && (a = []), a.indexOf(t) >= 0 && a.splice(a.indexOf(t), 1), e.className = a.join(" ") } }, b = function (e, t) { var a = {}; for (var i in t) e && "undefined" != typeof e[i] ? a[i] = e[i] : a[i] = t[i]; return a }; ABP.create = function (e, t) { var a = e; if (t || (t = {}), ABP.playerConfig = t.config ? t.config : {}, t = b(t, { replaceMode: !0, width: 512, height: 384, src: "" }), "string" == typeof e && (a = s(e)), h(a, "ABP-Unit")) i = a; else { var i = r("div", { className: "ABP-Unit", style: { width: t.width.toString().indexOf("%") >= 0 ? t.width : t.width + "px", height: t.height.toString().indexOf("%") >= 0 ? t.height : t.height + "px" } }); a.appendChild(i) } i.children.length > 0 && t.replaceMode && (i.textContent = ""); var o = [], l = []; if ("string" == typeof t.src) t.src = r("video", { autobuffer: "true", dataSetup: "{}" }, [r("source", { src: t.src })]), o.push(t.src); else if (t.src.hasOwnProperty("playlist")) for (var c = t.src, d = c.playlist, m = 0; m < d.length; m++) { if (d[m].hasOwnProperty("sources")) { var u = []; for (var p in d[m].sources) u.push(r("source", { src: d[m][p], type: p })); o.push(r("video", { autobuffer: "true", dataSetup: "{}" }, u)) } else d[m].hasOwnProperty("video") && o.push(d[m].video); l.push(d[m].comments) } else o.push(t.src); i.appendChild(r("div", { className: "ABP-Player" }, [r("div", { className: "ABP-Video", tabindex: "10" }, [r("div", { id: "info-box", style: { opacity: 1 } }, [r("div", { className: "text-wrapper" }, [r("div", {}, [r("text", ABP.Strings.loadingMeta)])]), r("div", { id: "dots" })]), r("div", { className: "ABP-Container" }, [r("div", { className: "cmt", style: { left: 0 } }, [r("text", "　")])]), o[0], r("div", { className: "Player-Stats" }, [r("div", { id: "player-dimension" }, [r("span", { className: "stats_name" }, [r("text", ABP.Strings.statsPlayer)]), r("span")]), r("div", { id: "video-dimension" }, [r("span", { className: "stats_name" }, [r("text", ABP.Strings.statsVideo)]), r("span")]), r("div", { id: "mimeType" }, [r("span", { className: "stats_name" }, [r("text", ABP.Strings.statsMimetype)]), r("span")]), r("div", { id: "buffer-health" }, [r("span", { className: "stats_name" }, [r("text", ABP.Strings.statsBuffer)]), r("span", { className: "stats-column", id: "buffer-health-column" }), r("span")]), r("div", { style: { position: "relative" } }, [r("span", { className: "stats_name" }, [r("text", ABP.Strings.statsBufferClip)]), r("span", { id: "buffer-clips" }, [r("span"), r("span", {}, [r("div", { style: { width: "1px", height: "400%", top: "-150%", position: "absolute", background: "#FFF", left: 0 } })])]), r("pre", { style: { position: "absolute", margin: 0, left: "250px", width: "90px", fontFamily: "inherit" } })]), r("br", { className: "flvjs" }), r("div", { className: "flvjs" }, [r("span", { className: "stats_name" }, [r("text", "fps：")]), r("span")]), r("div", { className: "flvjs", title: "1 kbps = 1000 bps" }, [r("span", { className: "stats_name" }, [r("text", ABP.Strings.statsVideoBitrate)]), r("span")]), r("div", { className: "flvjs", title: "1 kbps = 1000 bps" }, [r("span", { className: "stats_name" }, [r("text", ABP.Strings.statsAudioBitrate)]), r("span")]), r("div", { className: "flvjs", title: "1 kbps = 1000 bps" }, [r("span", { className: "stats_name" }, [r("text", ABP.Strings.statsCurrentBitrate)]), r("span")]), r("div", { title: "1 kbps = 1000 bps" }, [r("span", { className: "stats_name" }, [r("text", ABP.Strings.overallBitrate)]), r("span", { id: "overall-bitrate" })]), r("div", { className: "flvjs", style: { position: "relative" } }, [r("div", { style: { position: "absolute", left: "240px", bottom: "100%", cursor: "pointer" }, event: { click: function (e) { e.stopPropagation(), flvplayer && flvplayer.reloadSegment && flvplayer.reloadSegment() } } }, [r("text", "[ " + ABP.Strings.reload + " ]")])]), r("div", { className: "flvjs", title: "1 kbps = 1000 bps" }, [r("span", { className: "stats_name" }, [r("text", ABP.Strings.statsRealtimeBitrate)]), r("span", { className: "stats-column", id: "realtime-bitrate-column", style: { verticalAlign: "top" } }), r("span")]), r("div", { className: "flvjs" }, [r("span", { className: "stats_name" }, [r("text", ABP.Strings.statsDownloadSpeed)]), r("span", { className: "stats-column", id: "download-speed-column", style: { verticalAlign: "top" } }), r("span")]), r("div", { className: "flvjs" }, [r("span", { className: "stats_name" }, [r("text", ABP.Strings.statsSourceHost)]), r("span")]), r("div", { className: "flvjs" }, [r("span", { className: "stats_name" }, [r("text", ABP.Strings.statsRedirection)]), r("span")]), r("br"), r("div", { id: "canvas-fps" }, [r("span", { className: "stats_name" }, [r("text", "Canvas fps：")]), r("span")]), r("div", { className: "gecko" }, [r("span", { className: "stats_name" }, [r("text", ABP.Strings.statsMozParse)]), r("span", { id: "mozParsedFrames" })]), r("div", { className: "gecko" }, [r("span", { className: "stats_name" }, [r("text", ABP.Strings.statsMozDecode)]), r("span", { id: "mozDecodedFrames" })]), r("div", { className: "gecko" }, [r("span", { className: "stats_name" }, [r("text", ABP.Strings.statsMozPaint)]), r("span", { id: "mozPaintedFrames" })]), r("div", { className: "webkit" }, [r("span", { className: "stats_name" }, [r("text", ABP.Strings.statsWebkitDecode)]), r("span", { id: "webkitDecodedFrameCount" })]), r("div", { className: "webkit" }, [r("span", { className: "stats_name" }, [r("text", ABP.Strings.statsDrop)]), r("span", { id: "webkitDroppedFrameCount" })]), r("div", { className: "videoQuality" }, [r("span", { className: "stats_name" }, [r("text", ABP.Strings.statsPresent)]), r("span", { id: "totalVideoFrames" })]), r("div", { className: "videoQuality" }, [r("span", { className: "stats_name" }, [r("text", ABP.Strings.statsDrop)]), r("span", { id: "droppedVideoFrames" })]), r("br"), r("div", { style: { fontSize: "11px" } }, [r("text", n)]), r("div", { style: { fontSize: "11px" } }, [r("text", "2017©esterTion")]), r("div", { id: "stats-close" }, [r("text", "×")])]), r("div", { className: "Drag-Control" }, [r("div", { className: "Drag-Icon" }), r("div", { className: "Drag-Speed" }, [r("text", "")]), r("div", { className: "Drag-Time" }, [r("text", "00:00╱00:00")]), r("div", { className: "Drag-Time-Bar" }, [r("div", { className: "fill" })])])]), r("div", { className: "ABP-Bottom" }, [r("div", { className: "ABP-Bottom-Extend" }), r("div", { className: "BiliPlus-Scale-Menu" }, [r("div", { className: "Video-Defination" }), r("div", { className: "Video-Scale" }, [r("div", { changeTo: "default", className: "on" }, [r("text", ABP.Strings.displayScaleD)]), r("div", { changeTo: "16_9" }, [r("text", "16:9")]), r("div", { changeTo: "4_3" }, [r("text", "4:3")]), r("div", { changeTo: "full" }, [r("text", ABP.Strings.displayScaleF)])])]), r("div", { className: "ABP-Bottom-Wrapper" }, [r("div", { className: "ABP-Text" }, [r("div", { className: "ABP-CommentStyle" }, [r("div", { className: "button-group ABP-Comment-FontGroup" }, [r("div", { className: "button ABP-Comment-Font icon-font-style" }), r("div", { className: "ABP-Comment-FontOption" }, [r("p", { className: "style-title" }, [r("text", ABP.Strings.sendSize)]), r("div", { className: "style-select", name: "commentFontSize" }, [r("div", { className: "style-option", value: 18 }, [r("text", ABP.Strings.sendSmall)]), r("div", { className: "style-option on", value: 25 }, [r("text", ABP.Strings.sendMid)])]), r("p", { className: "style-title" }, [r("text", ABP.Strings.sendMode)]), r("div", { className: "style-select", name: "commentMode" }, [r("div", { className: "style-option", value: 5 }, [r("text", ABP.Strings.sendTop)]), r("div", { className: "style-option on", value: 1 }, [r("text", ABP.Strings.sendScroll)]), r("div", { className: "style-option", value: 4 }, [r("text", ABP.Strings.sendBottom)])])])]), r("div", { className: "button-group ABP-Comment-ColorGroup" }, [r("div", { className: "ABP-Comment-Color-Display" }), r("div", { className: "button ABP-Comment-Color icon-color-mode" }), r("div", { className: "ABP-Comment-ColorOption" }, [r("div", { className: "ABP-Comment-ColorPicker" })])])]), r("form", {}, [r("input", { className: "ABP-Comment-Input" })]), r("div", { className: "ABP-Comment-Send" }, [r("text", ABP.Strings.send)])]), r("div", { className: "ABP-Control" }, [r("div", { className: "button ABP-Play icon-play" }), r("div", { className: "button ABP-Next icon-next" }), r("div", { className: "progress-bar" }, [r("div", { className: "bar" }, [r("div", { className: "load" }), r("div", { className: "dark" })])]), r("div", { className: "time-label" }, [r("text", "00:00 / 00:00")]), r("div", { className: "button ABP-Volume icon-volume-high" }), r("div", { className: "volume-bar" }, [r("div", { className: "bar" }, [r("div", { className: "load" })])]), r("div", { className: "button-group ABP-CommentGroup" }, [r("div", { className: "button ABP-CommentShow icon-comment on" })]), r("div", { className: "button-group ABP-PlaySpeedGroup" }, [r("div", { className: "button ABP-Loop icon-loop" })]), r("div", { className: "button ABP-Setting icon-gear" }), r("div", { className: "button ABP-WideScreen icon-tv" }), r("div", { className: "button-group ABP-FullScreenGroup" }, [r("div", { className: "button ABP-FullScreen icon-screen-full" }), r("div", { className: "button ABP-Web-FullScreen icon-screen" })])])]), r("div", { className: "ABP-Title" })])])), i.appendChild(r("div", { className: "shield hidden" }, [r("div", { className: "shield_top" }, [r("text", ABP.Strings.commentBlock), r("span", { className: "close" })]), r("div", { className: "shield_tabs" }, [r("div", { className: "shield_tab on" }, [r("div", {}, [r("text", ABP.Strings.shieldTypeText)])]), r("div", { className: "shield_tab" }, [r("div", {}, [r("text", ABP.Strings.shieldTypeUser)])]), r("div", { className: "shield_tab" }, [r("div", {}, [r("text", ABP.Strings.shieldTypeColor)])]), r("div", { className: "shield_tab" }, [r("div", {}, [r("text", ABP.Strings.shieldTypeSetting)])])]), r("div", { className: "shield_tab_slash" }), r("div", { className: "shield_body" }, [r("div", { className: "shield_body_wrapper" }, [r("div", { className: "shield_tab_body" }, [r("div", { id: "shield_text" }), r("div", { className: "shield_item" }, [r("input", { className: "new", type: "text", placeholder: ABP.Strings.shieldAdd }), r("div", { className: "add" })])]), r("div", { className: "shield_tab_body" }, [r("div", { id: "shield_user" })]), r("div", { className: "shield_tab_body" }, [r("div", { id: "shield_color" })]), r("div", { className: "shield_tab_body" }, [r("div", { className: "shield_toggle", id: "useReg" }, [r("text", ABP.Strings.shieldUseRegex)]), r("div", { className: "shield_toggle", id: "blockTop" }, [r("text", ABP.Strings.shieldBlockTop)]), r("div", { className: "shield_toggle", id: "blockBottom" }, [r("text", ABP.Strings.shieldBlockBottom)]), r("div", { className: "shield_toggle", id: "blockVisitor" }, [r("text", ABP.Strings.shieldBlockVisitor)]), r("div", { className: "shield_slide", id: "repeat" }, [r("div", { className: "fill" }), r("div", { className: "button" }), r("div", { className: "slide_info" })]), r("div", { style: { padding: "0 16px" } }, [r("text", ABP.Strings.shieldRepeat)])])])])])), i.appendChild(r("div", { className: "ABP-Comment-List" }, [r("div", { className: "ABP-Comment-List-Count" }, [r("div", { style: { position: "absolute", left: "0px" } }, [r("span", { id: "viewer", style: { fontWeight: "bold" } }, [r("text", "看电影")]), r("text", ABP.Strings.viewers)]), r("div", { style: { position: "absolute", right: "20px" } }, [r("span", { id: "danmaku", style: { fontWeight: "bold" } }, [r("text", "--")]), r("text", ABP.Strings.comments)])]), r("div", { className: "ABP-Comment-List-Title" }, [r("div", { className: "cmt-time", item: "time" }, [r("text", ABP.Strings.commentTime)]), r("div", { className: "cmt-content", item: "content" }, [r("text", ABP.Strings.commentContent)]), r("div", { className: "cmt-date", item: "date" }, [r("text", ABP.Strings.commentDate)])]), r("div", { className: "ABP-Comment-List-Container" }, [r("ul", { className: "ABP-Comment-List-Container-Inner" })])])), i.appendChild(r("div", { className: "ABP-Settings" }, [r("div", {}, [r("div", { className: "ABP-Settings-Top" }, [r("div", { className: "ABP-Settings-Close" }, [r("text", "×")])]), r("div", { className: "ABP-Settings-Container" }, [r("p", { className: "label big" }, [r("text", ABP.Strings.settComment)]), r("p", { className: "label prop" }, [r("text", ABP.Strings.useCSS), r("div", { className: "prop-checkbox" })]), r("p", { className: "label" }, [r("text", ABP.Strings.commentSpeed)]), r("div", { className: "speed-bar" }, [r("div", { className: "bar" }, [r("div", { className: "load" })])]), r("p", { className: "label" }, [r("text", ABP.Strings.commentScale)]), r("div", { className: "scale-bar" }, [r("div", { className: "bar" }, [r("div", { className: "load" })])]), r("p", { className: "label" }, [r("text", ABP.Strings.commentDensity)]), r("div", { className: "density-bar" }, [r("div", { className: "bar" }, [r("div", { className: "load" })])]), r("p", { className: "label" }, [r("text", ABP.Strings.commentOpacity), r("div", { className: "prop-checkbox", style: { top: "10px", left: "calc(100% - 20px)" } })]), r("div", { className: "opacity-bar", style: { width: "calc(100% - 25px)" } }, [r("div", { className: "bar" }, [r("div", { className: "load" })])]), r("div", { className: "shield-enrty" }, [r("text", ABP.Strings.commentBlock)]), r("p", { className: "label big" }, [r("text", ABP.Strings.playSpeed)]), r("div", { className: "playSpeed-bar" }, [r("div", { className: "bar" }, [r("div", { className: "load" })])]), r("div", { className: "play-speed-reset" }, [r("text", ABP.Strings.playSpeedReset)]), r("p", { className: "label prop" }, [r("text", ABP.Strings.recordPlaySpeed), r("div", { id: "setting-recordPlaySpeed", className: "prop-checkbox" })]), r("p", { className: "label big" }, [r("text", ABP.Strings.settPlayer)]), r("p", { className: "label prop" }, [r("text", ABP.Strings.autoPlay), r("div", { id: "setting-autoPlay", className: "prop-checkbox" })]), r("p", { className: "label prop" }, [r("text", ABP.Strings.defaultWide), r("div", { id: "setting-defaultWide", className: "prop-checkbox" })]), r("p", { className: "label prop" }, [r("text", ABP.Strings.defaultFull), r("div", { id: "setting-defaultFull", className: "prop-checkbox" })]), r("p", { className: "label prop" }, [r("text", ABP.Strings.playerTheme + "："), r("select", { id: "setting-playerTheme", event: { mouseup: function (e) { e.stopPropagation() } } }, [r("option", { value: "bilibili" }, [r("text", "white")]), r("option", { value: "YouTube" }, [r("text", "black")])])])])])])), i.appendChild(r("div", { className: "Context-Menu" }, [r("div", { className: "Context-Menu-Background" }), r("div", { className: "Context-Menu-Body" }, [r("div", { id: "Player-Stats-Toggle" }, [r("text", ABP.Strings.showStats)]), r("div", { id: "Player-Speed-Control", className: "dm" }, [r("div", { className: "content" }, [r("text", ABP.Strings.playSpeed)]), r("div", { className: "dmMenu", style: { top: "-37px" } }, [r("div", { "data-speed": .5 }, [r("text", .5)]), r("div", { "data-speed": 1 }, [r("text", 1)]), r("div", { "data-speed": 1.25 }, [r("text", 1.25)]), r("div", { "data-speed": 1.5 }, [r("text", 1.5)]), r("div", { "data-speed": 2 }, [r("text", 2)])])]), r("div", { className: "about" }, [r("text", n)])])])), i.getElementsByClassName("ABP-Next")[0].innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" height="19" version="1.1" viewBox="0 0 12 12" width="19"><path d="M 0,12 8.5,6 0,0 V 24 z M 10,0 v 0 h 2 V 12 h -2 z"/></svg>'; var v = ABP.bind(i); return v }; var S = function () { var e = 3988292384, t = new Array(256), a = function () { var a, i, n; for (i = 0; i < 256; ++i) { for (a = i, n = 0; n < 8; ++n) a = 0 != (1 & a) ? e ^ a >>> 1 : a >>> 1; t[i] = a } }, i = function (e, a) { for (var i, n = 4294967295, o = e.length, l = 0; l < o; ++l) i = 255 & (n ^ e.charCodeAt(l)), n = n >>> 8 ^ t[i]; return a ? i : n }, n = function (e) { for (var a = 0; a < 256; a++) if (t[a] >>> 24 == e) return a; return -1 }, o = "", l = function (e, a) { var n = 0, l = "", s = i(e.toString(), !1); return n = 255 & s ^ a[2], n <= 57 && n >= 48 ? (l += n - 48, s = t[a[2]] ^ s >>> 8, n = 255 & s ^ a[1], n <= 57 && n >= 48 ? (l += n - 48, s = t[a[1]] ^ s >>> 8, n = 255 & s ^ a[0], n <= 57 && n >= 48 ? (l += n - 48, s = t[a[0]] ^ s >>> 8, o = l, 1) : 0) : 0) : 0 }; a(); var s = new Array(4); return function (e) { var a, r, c, d = 4294967295 ^ parseInt(e, 16); for (r = 1; r < 1001; r++) if (d == i(r.toString(), !1)) return r; for (r = 3; r >= 0; r--) s[3 - r] = n(d >>> 8 * r), a = t[s[3 - r]], d ^= a >>> 8 * (3 - r); for (r = 0; r < 1e5 && (c = i(r.toString(), !0), c != s[3] || !l(r, s)) ; r++); return 1e5 == r ? -1 : r + "" + o } }, B = function (e) { for (var t = 0, a = e.buffered, i = a.length, n = 0, o = e.currentTime; n < i && !(o < a.start(n)) ; n++) t = n; var l = a.start(t), s = a.end(t); return { start: l, end: s, delta: s - o, index: t } }; window.crc_engine = new S, ABP.bind = function (n, o) {
            function c(e, a) { switch (e) { case "close": case "error": t(function () { wt = new Nt(window.cid), wt.setListener(c) }, 5e3); break; case "online": m.playerUnit.querySelector(".ABP-Comment-List-Count span#viewer").textContent = a; break; case "msg": if (a = JSON.parse(a), "DM" == a.cmd) { var n = a.info; n = [n[0].split(","), n[1]], n = { border: !1, position: "absolute", stime: 1e3 * n[0][0], mode: 1 * n[0][1], size: 1 * n[0][2], color: 1 * n[0][3], date: 1 * n[0][4], whatTheHellIsThis: 1 * n[0][5], pool: 1 * n[0][6], hash: n[0][7], dbid: 1 * n[0][8], text: n[1] }, 8 == n.mode && (n.code = n.text, delete n.text); var o = { date: n.date, time: n.stime, mode: n.mode, user: n.hash, pool: n.pool, content: n.text || n.code, originalData: n }; m.cmManager.insert(n), shield.shield(), m.commentList[n.dbid] = o; var l = r("li", {}), s = r("span", { className: "cmt-time" }, [r("text", p(o.time / 1e3))]), d = r("span", { className: "cmt-content" }, [r("text", o.content)]), v = r("span", { className: "cmt-date" }, [r("text", u(o.date, !0))]); f(d, !1, 36), f(v, !1, 18), d.tooltip(o.content), v.tooltip(u(o.date)), l.appendChild(s), l.appendChild(d), l.appendChild(v), l.data = o, void 0 != n.code ? l.style.background = "#ffe100" : 0 != n.pool && (l.style.background = "#20ff20"), l[i]("dblclick", function (e) { m.video.currentTime = this.data.time / 1e3, rt(C.currentTime) }), m.commentObjArray.push(l); var g = m.commentListContainer, h = !1; g.parentNode.scrollTop + g.parentNode.offsetHeight == g.scrollHeight && (h = !0), m.renderCommentList(), h && (g.parentNode.scrollTop += 24), m.playerUnit.querySelector(".ABP-Comment-List-Count span#danmaku").textContent = m.commentObjArray.length } } } var m = { playerUnit: n, btnPlay: null, btnNext: null, barTime: null, barLoad: null, barTimeHitArea: null, barVolume: null, barVolumeHitArea: null, barOpacity: null, barOpacityHitArea: null, barScale: null, barScaleHitArea: null, barSpeed: null, barSpeedHitArea: null, barPlaySpeed: null, barPlaySpeedHitArea: null, btnFont: null, btnColor: null, btnSend: null, controlBar: null, timeLabel: null, timeJump: null, divComment: null, btnWide: null, btnFull: null, btnWebFull: null, btnDm: null, btnLoop: null, btnProp: null, btnAutoOpacity: null, videoDiv: null, btnVolume: null, video: null, txtText: null, commentColor: "ffffff", commentFontSize: 25, commentMode: 1, displayColor: null, cmManager: null, commentList: null, commentListContainer: null, lastSelectedComment: null, commentCoolDown: 1e4, commentScale: ABP.playerConfig.scale ? ABP.playerConfig.scale : 1, commentSpeed: ABP.playerConfig.speed ? ABP.playerConfig.speed : 1, proportionalScale: ABP.playerConfig.prop, autoPlay: !1, defaultWide: !1, defaultFull: !1, recordPlaySpeed: !1, defaults: { w: 0, h: 0 }, inited: !1, state: b(o, { fullscreen: !1, commentVisible: !0, allowRescale: !1, autosize: !1, widescreen: !1 }), createPopup: function (e, a) { if (n.hasPopup === !0) return !1; var i = r("div", { className: "ABP-Popup" }, [r("text", e)]); return i.remove = function () { i.isRemoved || (i.isRemoved = !0, n.removeChild(i), n.hasPopup = !1) }, n.appendChild(i), n.hasPopup = !0, "number" == typeof a && t(function () { i.remove() }, a), i }, removePopup: function () { for (var e = n.getElementsByClassName("ABP-Popup"), t = 0; t < e.length; t++) null != e[t].remove ? e[t].remove() : e[t].parentNode.removeChild(e[t]); n.hasPopup = !1 }, loadCommentList: function (e, t) { t = "asc" == t ? -1 : 1; var a = Object.keys(m.commentList).sort(function (a, i) { return m.commentList[a][e] < m.commentList[i][e] ? t : m.commentList[a][e] > m.commentList[i][e] ? -t : 0 }); m.commentObjArray = []; for (P in a) { var n = a[P], o = m.commentList[n]; if (o && o.time) { var l = r("li", {}), s = r("span", { className: "cmt-time" }, [r("text", p(o.time / 1e3))]), c = r("span", { className: "cmt-content" }, [r("text", o.content)]), d = r("span", { className: "cmt-date" }, [r("text", u(o.date, !0))]); f(c, !1, 36), f(d, !1, 18), c.tooltip(o.content), d.tooltip(u(o.date)), l.appendChild(s), l.appendChild(c), l.appendChild(d), l.data = o, l.originalData = danmaku, 8 == o.mode ? l.style.background = "#ffe100" : 0 != o.pool && (l.style.background = "#20ff20"), l[i]("dblclick", function (e) { m.video.currentTime = this.data.time / 1e3, rt(C.currentTime) }), m.commentObjArray.push(l) } } m.commentListContainer.style.height = 24 * m.commentObjArray.length + "px", m.renderCommentList(), m.playerUnit.querySelector(".ABP-Comment-List-Count span#danmaku").textContent = m.commentObjArray.length }, renderCommentList: function () { var e = m.commentListContainer.parentElement.scrollTop, t = parseInt(e / 24); m.commentListContainer.textContent = ""; for (var a = t; a <= t + 40 && "undefined" != typeof m.commentObjArray[a]; a++) { if (a == t && a > 0) { var n = m.commentObjArray[a].cloneNode(!0), o = n.getElementsByClassName("cmt-content")[0], l = n.getElementsByClassName("cmt-date")[0]; n[i]("dblclick", function (e) { m.video.currentTime = m.commentObjArray[a].data.time / 1e3, rt(C.currentTime) }), f(o, !1, 36), f(l, !1, 18), o.tooltip(m.commentObjArray[a].data.content), l.tooltip(u(m.commentObjArray[a].data.date)), n.style.paddingTop = 24 * t + "px" } else var n = m.commentObjArray[a]; m.commentObjArray[a].data.originalData.isBlocked ? (m.commentObjArray[a].childNodes[0].className = "cmt-time blocked", m.commentObjArray[a].childNodes[0].title = ABP.Strings.blockMatch + m.commentObjArray[a].data.originalData.blockReason) : (m.commentObjArray[a].childNodes[0].className = "cmt-time", m.commentObjArray[a].childNodes[0].title = ""), m.commentListContainer.appendChild(n) } }, commentCallback: function (e) { e.result ? (m.commentList[e.id] = m.commentList[e.tmp_id], delete m.commentList[e.tmp_id]) : (delete m.commentList[e.tmp_id], m.createPopup(e.error, 5e3)) }, swapVideo: null }; if (Object.defineProperty(m, "title", { get: function () { return m.playerUnit.getElementsByClassName("ABP-Title")[0].textContent }, set: function (e) { var t = m.playerUnit.getElementsByClassName("ABP-Title")[0]; t.textContent = "", t.appendChild(r("text", e)) } }), m.swapVideo = function (e) { var a = function () { if (!nt) { rt(e.currentTime); try { var t = B(this), a = this.duration, i = t.end / a * 100; m.barLoad.style.width = i + "%" } catch (e) { return } } }; e[i]("timeupdate", a), e[i]("timeupdate", function (e) { m.inited = !0 }), e[i]("canplay", function (e) { m.inited = !0 }); var o = 0, l = !0, s = !1, r = !1, c = !1, d = function () { c = !1, e.removeEventListener("canplay", d), void 0 != m.lastTime && (e.currentTime = m.lastTime, delete m.lastTime), void 0 != m.lastSpeed && (e.playbackRate = m.lastSpeed, delete m.lastSpeed), !e.paused || !m.autoPlay && l || m.btnPlay.click(), l && (l = !1, m.state.widescreen || m.state.fullscreen || !m.defaultWide || m.btnWide.click(), !m.state.fullscreen && m.defaultFull && m.btnWebFull.click()) }, u = function () { var t = e.readyState, a = document.getElementById("info-box"); if (!e.ended) switch (t) { case 1: isMobile() && e.paused && (m.createPopup("请点击播放器开始播放", 3e3), m.video.dispatchEvent(new Event("autoPlayFailed"))); case 2: try { var i = e.buffered, n = B(e); if (flvplayer && flvplayer._mediaDataSource && n.delta < .2 && n.index < i.length - 1) return console.warn("buffer gap at", i.end(n.index), ", jump from", e.currentTime, "to", i.start(n.index + 1)), void (e.currentTime = i.start(n.index + 1)) } catch (e) { } 0 == a.style.opacity && (a.style.opacity = 1), dots.running || dots.runTimer(); try { var n = B(e); a.childNodes[0].childNodes[0].textContent = ABP.Strings.buffering + " " + Math.floor(100 * n.delta) / 100 + "s" } catch (e) { a.childNodes[0].childNodes[0].textContent = ABP.Strings.buffering } break; case 3: case 4: 1 == a.style.opacity && (a.style.opacity = 0, dots.stopTimer()) } }, p = function () { if (window.cid && !s && !r && !c) { var t = JSON.parse(localStorage.playHistory || "{}"); t[cid] = 0 | e.currentTime, localStorage.playHistory = JSON.stringify(t) } }, v = function () { if (window.cid) { var e = JSON.parse(localStorage.playHistory || "{}"); e[cid] && delete e[cid], localStorage.playHistory = JSON.stringify(e) } }; e[i]("autoplay", function () { e[i]("canplay", d) }), e[i]("pause", p), e[i]("ended", function () { s = !0, v() }); try { var f = JSON.parse(localStorage.playHistory || "{}"); void 0 != f[cid] && (m.lastTime = f[cid]) } catch (e) { } window[i]("beforeunload", function () { return p(), null }), m.playerUnit[i]("beforecidchange", function () { p(), c = !0, s = !1 }), e[i]("loop", function () { r = e.loop }), e[i]("canplay", d), e[i]("canplay", u), e[i]("waiting", u), e[i]("readystatechange", u), e[i]("progress", u), e[i]("ended", function () { m.btnPlay.className = "button ABP-Play icon-play", m.videoDiv.className = "ABP-Video", n.dispatchEvent(new Event("callNext")) }), e[i]("progress", a), e.isBound = !0; var h = 0, b = !1; if (m.cmManager) { m.cmManager[i]("load", function () { m.commentList = {}; for (P in m.cmManager.timeline) { var e = m.cmManager.timeline[P]; 8 != e.mode || b || (b = !0, t(function () { var e = new CCLScripting("/js/CommentCoreLibraryScripting.min.js"); m.cmManager.scripting = e.getSandbox(m.divComment, m.video) }, 0)), e.dbid && e.stime && (m.commentList[e.dbid] = { date: e.date, time: e.stime, mode: e.mode, user: e.hash, pool: e.pool, content: e.text || e.code, originalData: e }) } m.loadCommentList("date", "asc"), m.commentListContainer.parentElement[i]("scroll", m.renderCommentList) }), m.cmManager.setBounds = function () { n.offsetHeight <= 300 || n.offsetWidth <= 700 ? g(n, "ABP-Mini") : y(n, "ABP-Mini"); var e = m.videoDiv.offsetWidth, t = m.videoDiv.offsetHeight; m.proportionalScale ? t / 493 * m.commentScale : m.commentScale; this.width = e, this.height = t, this.options.global.scale = this.width / 680 / m.commentSpeed, this.dispatchEvent("resize"); for (var a in this.csa) this.csa[a].setBounds(this.width, this.height); this.stage.style.width = this.width + "px", this.stage.style.height = this.height + "px", this.stage.style.perspective = this.width * Math.tan(40 * Math.PI / 180) / 2 + "px", this.stage.style.webkitPerspective = this.width * Math.tan(40 * Math.PI / 180) / 2 + "px", n.querySelector(".BiliPlus-Scale-Menu .Video-Scale div.on").click(), this.canvasResize() }, t(function () { m.cmManager.setBounds() }, 0), m.cmManager.clear(), e[i]("progress", function () { h == e.currentTime && S && (new Date).getTime() - o >= 100 ? (e.hasStalled = !0, m.cmManager.stopTimer(), m.cmManager.pauseComment()) : h != e.currentTime && (h = e.currentTime), o = (new Date).getTime() }), window && window[i]("resize", function () { m.cmManager.setBounds() }), e[i]("timeupdate", function () { m.cmManager.display !== !1 && (e.hasStalled && (m.cmManager.startTimer(), m.cmManager.resumeComment(), e.hasStalled = !1), m.cmManager.time(Math.floor(1e3 * e.currentTime))) }), e[i]("play", function () { m.cmManager.startTimer(), m.cmManager.resumeComment(), m.btnPlay.className = "button ABP-Play ABP-Pause icon-pause", m.btnPlay.tooltip(ABP.Strings.pause), g(m.videoDiv, "ABP-HideCursor") }), e[i]("ratechange", function () { 0 !== e.playbackRate && (m.recordPlaySpeed && at(), At(m.video.playbackRate)) }); var S = !1; e[i]("pause", function () { m.cmManager.stopTimer(), m.cmManager.pauseComment(), m.btnPlay.className = "button ABP-Play icon-play", m.btnPlay.tooltip(ABP.Strings.play), S = !1, y(m.videoDiv, "ABP-HideCursor") }), e[i]("waiting", function () { m.cmManager.stopTimer(), m.cmManager.pauseComment(), S = !1 }), e[i]("playing", function () { m.cmManager.startTimer(), m.cmManager.resumeComment(), S = !0 }) } }, null !== n && null !== n.getElementsByClassName) {
                m.defaults.w = n.offsetWidth, m.defaults.h = n.offsetHeight; var S = n.getElementsByClassName("ABP-Video"); if (!(S.length <= 0)) {
                    var C = null; m.videoDiv = S[0]; for (var P in S[0].children) if (null != S[0].children[P].tagName && "VIDEO" === S[0].children[P].tagName.toUpperCase()) { C = S[0].children[P]; break } var A = S[0].getElementsByClassName("ABP-Container"); if (A.length > 0 && (m.divComment = A[0]), null !== C) {
                        m.video = C, m.video.seek = function (e) { this.currentTime = parseFloat(e) / 1e3 }; var x = n.getElementsByClassName("ABP-Play"); if (!(x.length <= 0)) {
                            m.btnPlay = x[0], m.btnPlay.tooltip(ABP.Strings.play), f(m.btnPlay); var k = n.getElementsByClassName("ABP-Next"); if (!(k.length <= 0)) {
                                m.btnNext = k[0], m.btnNext.tooltip(ABP.Strings.next), f(m.btnNext), m.btnNext[i]("click", function (e) { e.stopPropagation(), n.dispatchEvent(new Event("callNext")) }); var N = n.getElementsByClassName("progress-bar"); if (!(N.length <= 0)) {
                                    var w = N[0].getElementsByClassName("bar"); m.barTimeHitArea = w[0], m.barLoad = w[0].getElementsByClassName("load")[0], m.barTime = w[0].getElementsByClassName("dark")[0]; var _ = n.getElementsByClassName("time-label"); if (!(_.length <= 0)) {
                                        m.timeLabel = _[0]; var M = n.getElementsByClassName("ABP-Volume"); if (!(M.length <= 0)) {
                                            m.btnVolume = M[0], m.btnVolume.tooltip(ABP.Strings.mute), f(m.btnVolume); var T = n.getElementsByClassName("volume-bar"); if (!(T.length <= 0)) {
                                                var F = T[0].getElementsByClassName("bar"); m.barVolumeHitArea = F[0], m.barVolume = F[0].getElementsByClassName("load")[0]; var H = n.getElementsByClassName("opacity-bar"); if (!(H.length <= 0)) {
                                                    var H = H[0].getElementsByClassName("bar"); m.barOpacityHitArea = H[0], m.barOpacity = H[0].getElementsByClassName("load")[0]; var D = n.getElementsByClassName("scale-bar"); if (!(D.length <= 0)) {
                                                        var D = D[0].getElementsByClassName("bar"); m.barScaleHitArea = D[0], m.barScale = D[0].getElementsByClassName("load")[0], m.barDensityHitArea = n.querySelector(".density-bar .bar"), m.barDensity = m.barDensityHitArea.getElementsByClassName("load")[0]; var E = n.getElementsByClassName("speed-bar"); if (!(E.length <= 0)) {
                                                            var E = E[0].getElementsByClassName("bar"); m.barSpeedHitArea = E[0], m.barSpeed = E[0].getElementsByClassName("load")[0]; var L = n.getElementsByClassName("playSpeed-bar"); if (!(L.length <= 0)) {
                                                                var L = L[0].getElementsByClassName("bar"); m.barPlaySpeedHitArea = L[0], m.barPlaySpeed = L[0].getElementsByClassName("load")[0], n.querySelector(".play-speed-reset")[i]("click", function () { m.video.playbackRate = 1 }); var I = n.getElementsByClassName("prop-checkbox"); if (!(I.length <= 0)) {
                                                                    m.btnAutoOpacity = I[1], m.btnAutoOpacity.tooltip(ABP.Strings.autoOpacityOff), f(m.btnAutoOpacity), m.btnProp = I[0], m.btnProp.tooltip(ABP.Strings.usingCanvas), f(m.btnProp); var O = n.getElementsByClassName("ABP-FullScreen"); if (!(O.length <= 0)) {
                                                                        m.btnFull = O[0], m.btnFull.tooltip(ABP.Strings.fullScreen), f(m.btnFull); var W = n.getElementsByClassName("ABP-Web-FullScreen"); if (!(W.length <= 0)) {
                                                                            m.btnWebFull = W[0], m.btnWebFull.tooltip(ABP.Strings.webFull), f(m.btnWebFull); var R = n.getElementsByClassName("ABP-WideScreen"); if (!(R.length <= 0)) {
                                                                                m.btnWide = R[0], m.btnWide.tooltip(ABP.Strings.wideScreen), f(m.btnWide); var V = n.getElementsByClassName("ABP-Comment-Font"); if (!(V.length <= 0)) {
                                                                                    m.btnFont = V[0], m.btnFont.tooltip(ABP.Strings.sendStyle), f(m.btnFont); var z = n.getElementsByClassName("ABP-Comment-Color"); if (!(z.length <= 0)) {
                                                                                        m.btnColor = z[0], m.btnColor.tooltip(ABP.Strings.sendColor), f(m.btnColor); var q = n.getElementsByClassName("ABP-Comment-Color-Display"); if (!(q.length <= 0)) {
                                                                                            m.displayColor = q[0]; var j = n.getElementsByClassName("ABP-Comment-Input"); if (!(j.length <= 0)) {
                                                                                                m.txtText = j[0]; var U = n.getElementsByClassName("ABP-Comment-List-Container-Inner"); if (!(U.length <= 0)) {
                                                                                                    m.commentListContainer = U[0]; var X = n.getElementsByClassName("ABP-Comment-Send"); if (!(X.length <= 0)) {
                                                                                                        m.btnSend = X[0], m.btnSend.tooltip(ABP.Strings.sendTooltip), f(m.btnSend); var J = n.getElementsByClassName("ABP-Control"); J.length > 0 && (m.controlBar = J[0]); var Y = n.getElementsByClassName("ABP-CommentShow"); if (!(Y.length <= 0)) {
                                                                                                            m.btnDm = Y[0], m.btnDm.tooltip(ABP.Strings.hideComment), f(m.btnDm); var G = n.getElementsByClassName("ABP-Loop"); if (!(G.length <= 0)) {
                                                                                                                m.btnLoop = G[0], m.btnLoop.tooltip(ABP.Strings.loopOff), f(m.btnLoop); var Q = n.getElementsByClassName("ABP-Setting")[0], K = n.getElementsByClassName("ABP-Settings")[0]; m.btnSetting = Q, m.settingPanel = K, m.btnSetting.tooltip(ABP.Strings.settings), f(m.btnSetting); var Z = !1, $ = function () { Z ? y(K, "expand") : g(K, "expand"), Z ? y(Q, "on") : g(Q, "on"), Z = !Z }; m.btnSetting[i]("click", $), n.getElementsByClassName("ABP-Settings-Close")[0][i]("click", $), document.getElementById("setting-autoPlay")[i]("click", function () { m.autoPlay = !m.autoPlay, m.autoPlay ? g(this, "on") : y(this, "on"), at() }), document.getElementById("setting-defaultWide")[i]("click", function () { m.defaultWide = !m.defaultWide, m.defaultWide ? g(this, "on") : y(this, "on"), at() }), document.getElementById("setting-defaultFull")[i]("click", function () { m.defaultFull = !m.defaultFull, m.defaultFull ? g(this, "on") : y(this, "on"), at() }), document.getElementById("setting-recordPlaySpeed")[i]("click", function () { m.recordPlaySpeed = !m.recordPlaySpeed, m.recordPlaySpeed ? g(this, "on") : y(this, "on"), at() }); var ee = { videoDimension: !0, gecko: !0, webkit: !0, videoQuality: !0, flvjs: !0 }, te = function (e) { return document.querySelector(e) }, ae = function (e) { return document.getElementById(e) }, ie = function (e) { return (1 * e).toFixed(2) }, ne = ae("player-dimension").lastChild, oe = ae("video-dimension").lastChild, le = ae("canvas-fps").lastChild, se = ae("buffer-health-column"), re = ae("realtime-bitrate-column"), ce = ae("download-speed-column"), de = [], me = [], ue = [], pe = ae("buffer-health").lastChild, ve = '<svg style="width:180px;height:21px"><polyline style="fill:transparent;stroke:#ccc"></polyline><polyline points="1,21 180,21 180,1" style="fill:transparent;stroke:#fff"></polyline></svg>', fe = "", ge = r("style"), he = r("style"), ye = document.querySelectorAll(".flvjs>:last-child"), P = 0, be = function (e, t) { var a, i = 0, n = []; t.forEach(function (e) { i = e > i ? e : i }), 0 == i && (i = 1); for (a in t) n.push(3 * a + "," + (20 * (1 - t[a] / i) + 1) + " " + (3 * a + 3) + "," + (20 * (1 - t[a] / i) + 1)); e.setAttribute("points", n.join(" ")) }, Se = !1, Be = ae("Player-Stats-Toggle"), Ce = function (e) { "stats-close" == e.target.id && e.stopPropagation(), te(".Player-Stats").style.display = Se ? "" : "block", Se = !Se }, Pe = -1, Ae = 0; for (Be[i]("click", Ce), ae("stats-close")[i]("click", Ce) ; P < 60; P++) de.push(0), me.push(0), ue.push(0); if (se.innerHTML = ve, se = se.firstChild.firstChild, re.innerHTML = ve, re = re.firstChild.firstChild, ce.innerHTML = ve, ce = ce.firstChild.firstChild, void 0 == C.videoWidth && (ee.videoDimension = !1, fe += "#video-dimension{display:none}"), void 0 == C.mozDecodedFrames && (ee.gecko = !1, fe += ".gecko{display:none}"), void 0 == C.webkitDecodedFrameCount && (ee.webkit = !1, fe += ".webkit{display:none}"), void 0 == C.getVideoPlaybackQuality && (ee.videoQuality = !1, fe += ".videoQuality{display:none}"), ge.textContent = fe, document.head.appendChild(ge), he.textContent = ".flvjs{display:none}", document.head.appendChild(he), void 0 == window.flvplayer && (ee.flvjs = !1), setInterval(function () { Ae ^= 1, ne.textContent = C.offsetWidth + "x" + C.offsetHeight + " *" + devicePixelRatio, ee.videoDimension && (oe.textContent = C.videoWidth + "x" + C.videoHeight); var e = {}; try { e = B(C) } catch (e) { } if (e = e.delta > 0 ? e.delta : 0, de.push(e), de.shift(), pe.textContent = ie(e) + "s", Se && be(se, de), Se) { for (var t, a, i = C.buffered, n = te("#buffer-clips>span"), o = C.duration == 1 / 0 ? i.end(i.length - 1) : C.duration, l = [], s = 0; s < i.length; s++) s >= n.childNodes.length && n.appendChild(r("span", { className: "buffer-clip" })), t = i.start(s), a = i.end(s) - t, n.childNodes[s].style.left = ie(t / o * 100) + "%", n.childNodes[s].style.width = ie(a / o * 100) + "%", l.push(p(0 | t) + " - " + p(t + a | 0)); for (; s < n.childNodes.length;) n.childNodes[s].remove(); n.parentNode.parentNode.childNodes[2].textContent = l.join("\n"), te("#buffer-clips>span>div").style.left = ie(C.currentTime / o * 100) + "%" } if (ee.flvjs) if (flvplayer._mediaInfo) { he.textContent = ""; var c, d, s = 0, u = flvplayer._mediaInfo, v = flvplayer.statisticsInfo, f = C.currentTime, g = flvplayer._mediaDataSource.segments, h = 0, y = 0; for (d = 0; d < g.length; d++) { if (f <= (h + g[d].duration) / 1e3) { h = f - h / 1e3 | 0; break } h += g[d].duration, y++ } if (Se) { for (var b = te("#buffer-clips>span:nth-of-type(2)"), S = b.children; S.length > g.length;) S[g.length].remove(); for (; S.length < g.length;) b.appendChild(r("div", { style: { width: "1px", height: "300%", top: "-100%", position: "absolute", background: "#CCC", left: 0 } })); for (var P = 1, A = 0; P < g.length; P++) S[P].style.left = ie((A + g[P - 1].duration) / 1e3 / o * 100) + "%", A += g[P - 1].duration } var x = v.currentSegmentIndex, k = g[x] || {}, N = 0 | k.filesize, w = 0 | k.duration; ae("mimeType").lastChild.textContent = u.mimeType, ye[s++].textContent = ie(u.fps), ye[s++].textContent = ie(u.videoDataRate) + " kbps", ye[s++].textContent = ie(u.audioDataRate) + " kbps", ye[s++].textContent = ie(N / w * 8) + " kbps" + ("　Seg " + (x + 1) + "/" + v.totalSegmentCount), s++, u.bitrateMap ? (u.bitrateMap[y] && (c = u.bitrateMap[y][h]), void 0 != c ? Ae && Pe != (0 | C.currentTime) ? (Pe = 0 | C.currentTime, ye[s++].textContent = ie(c) + " kbps", me.push(c), me.shift(), Se && be(re, me)) : s++ : ye[s++].textContent = "N/A") : ye[s++].textContent = "N/A", Ae ? (ue.push(v.speed), ue.shift(), Se && be(ce, ue), ye[s++].textContent = ie(v.speed) + " KB/s", flvplayer._statisticsInfo.speed = 0) : s++; var _, M, T = k.url.match(/(http[s]?:)?\/\/([a-zA-Z0-9\.\-]+)/); null == T ? (M = location.protocol, _ = location.hostname) : (M = T[1] || location.protocol, _ = T[2]), ye[s].title = k.url, ye[s++].textContent = M + "//" + _, v.hasRedirect ? (ye[s].title = k.redirectedURL, ye[s++].textContent = k.redirectedURL.match(/(http[s]?:)?\/\/([a-zA-Z0-9\.\-]+)/)[0]) : ye[s++].textContent = ABP.Strings.statsRedirectionNone } else { he.textContent = ".flvjs{display:none}", ae("mimeType").lastChild.textContent = "video/mp4"; for (var S = te("#buffer-clips>span:nth-of-type(2)").children; S.length > 1;) S[1].remove() } if (window.overallBitrate ? (ae("overall-bitrate").parentNode.style.display = "", ae("overall-bitrate").textContent = ie(overallBitrate) + " kbps") : ae("overall-bitrate").parentNode.style.display = "none", Ae && (le.textContent = m.cmManager.canvasFPS), ee.gecko && ["mozParsedFrames", "mozDecodedFrames", "mozPaintedFrames"].forEach(function (e) { ae(e).textContent = C[e] }), ee.webkit && ["webkitDecodedFrameCount", "webkitDroppedFrameCount"].forEach(function (e) { ae(e).textContent = C[e] }), ee.videoQuality) { var F = C.getVideoPlaybackQuality(); ae("totalVideoFrames").textContent = F.totalVideoFrames, ae("droppedVideoFrames").textContent = F.droppedVideoFrames } }, 500), "undefined" != typeof CommentManager && (m.cmManager = new CommentManager(m.divComment), m.cmManager.display = !0, m.cmManager.init(), m.cmManager.clear(), m.cmManager.filter.addModifier(shield.filter), window && window[i]("resize", function () { m.cmManager.setBounds() })), "object" == typeof ABP.playerConfig) { ABP.playerConfig.volume && (m.video.volume = ABP.playerConfig.volume), ABP.playerConfig.opacity && (m.cmManager.options.global.opacity = ABP.playerConfig.opacity), ABP.playerConfig.autoPlay && (m.autoPlay = !0, g(document.getElementById("setting-autoPlay"), "on")), ABP.playerConfig.defaultWide && (m.defaultWide = !0, g(document.getElementById("setting-defaultWide"), "on")), ABP.playerConfig.defaultFull && (m.defaultFull = !0, g(document.getElementById("setting-defaultFull"), "on")), ABP.playerConfig.commentVisible === !1 && (g(m.playerUnit, "hide-comment"), y(m.btnDm, "on"), m.cmManager.display = !1, m.cmManager.stopTimer(), m.btnDm.tooltip(ABP.Strings.showComment)), ABP.playerConfig.autoOpacity && (g(m.btnAutoOpacity, "on"), m.cmManager.autoOpacity(!0), m.btnAutoOpacity.tooltip(ABP.Strings.autoOpacityOn)), ABP.playerConfig.recordPlaySpeed && (m.recordPlaySpeed = !0, g(document.getElementById("setting-recordPlaySpeed"), "on"), m.lastSpeed = ABP.playerConfig.playSpeed); var xe = ABP.playerConfig.density || 0; m.cmManager.options.global.density = xe; var ke = ABP.playerConfig.theme || "YouTube"; n.setAttribute("theme", ke), (te("#setting-playerTheme [value=" + ke + "]") || {}).selected = !0, document.getElementById("setting-playerTheme")[i]("change", function () { n.setAttribute("theme", this.value), at(), n.dispatchEvent(new Event("themeChange")) }) } if (e(".ABP-Comment-List-Title *").click(function () { var t = e(this).attr("item"), a = e(this).hasClass("asc") ? "desc" : "asc"; e(".ABP-Comment-List-Title *").removeClass("asc").removeClass("desc"), e(this).addClass(a), m.loadCommentList(t, a) }), e(".ABP-Unit .ABP-CommentStyle .ABP-Comment-FontOption .style-option").click(function () { e(this).closest(".style-select").find(".style-option").removeClass("on"), e(this).addClass("on"), m[e(this).closest(".style-select").attr("name")] = parseInt(e(this).attr("value")) }), e(n).find(".ABP-Comment-ColorPicker").colpick({ flat: !0, submit: 0, color: "ffffff", onChange: function (e, t) { m.commentColor = t, m.displayColor.style.backgroundColor = "#" + t } }), C.isBound !== !0) {
                                                                                                                    m.swapVideo(C), m.playerUnit.querySelector(".BiliPlus-Scale-Menu .Video-Defination")[i]("click", function (e) { if (!e.target.hasAttribute("changeto")) return !1; var t = JSON.parse(e.target.getAttribute("changeto")); changeSrc({ target: { value: t[1] } }, t[0]), y(e.target.parentNode.querySelector(".on"), "on"), g(e.target, "on") }), m.playerUnit.querySelector(".BiliPlus-Scale-Menu .Video-Scale")[i]("click", function (e) { if (!e.target.hasAttribute("changeto")) return !1; switch (e.target.getAttribute("changeto")) { case "default": h(m.video, "scale") && y(m.video, "scale"), m.video.style.width = "", m.video.style.height = "", m.video.style.paddingTop = "", m.video.style.paddingLeft = ""; break; case "16_9": g(m.video, "scale"); var t = m.videoDiv.offsetWidth, a = m.videoDiv.offsetHeight, i = "", n = ""; t < a / 9 * 16 ? (i = (a - t / 16 * 9) / 2 + "px", a = t / 16 * 9 / a * 100 + "%", t = "100%") : (n = (t - a / 9 * 16) / 2 + "px", t = a / 9 * 16 / t * 100 + "%", a = "100%"), m.video.style.width = t, m.video.style.height = a, m.video.style.paddingTop = i, m.video.style.paddingLeft = n; break; case "4_3": g(m.video, "scale"); var t = m.videoDiv.offsetWidth, a = m.videoDiv.offsetHeight, i = "", n = ""; t < a / 3 * 4 ? (i = (a - t / 4 * 3) / 2 + "px", a = t / 4 * 3 / a * 100 + "%", t = "100%") : (n = (t - a / 3 * 4) / 2 + "px", t = a / 3 * 4 / t * 100 + "%", a = "100%"), m.video.style.width = t, m.video.style.height = a, m.video.style.paddingTop = i, m.video.style.paddingLeft = n; break; case "full": g(m.video, "scale"), m.video.style.width = "", m.video.style.height = "", m.video.style.paddingTop = "", m.video.style.paddingLeft = "" } y(e.target.parentNode.querySelector(".on"), "on"), g(e.target, "on") }); var Ne = !1; C[i]("autoPlayFailed", function () { Ne = !0 }); var we, _e = 0, Me = function (e) { var i = Date.now(); i - _e <= 500 ? (m.btnFull.click(), i - _e <= 200 ? a(we) : m.btnPlay.click()) : Ne ? (m.btnPlay.click(), Ne = !1) : we = t(function () { m.btnPlay.click() }, 250), _e = i, e.preventDefault() }; m.videoDiv[i]("click", Me), m.playerUnit.querySelector(".ABP-Bottom-Extend")[i]("click", function (e) { e.preventDefault(), e.stopPropagation(), Me(e) }); var Te = t(function () { g(m.videoDiv, "ABP-HideCursor") }, 3e3); m.videoDiv[i]("mousemove", function (e) { l(e) && (Te && a(Te), h(m.videoDiv, "ABP-HideCursor") && y(m.videoDiv, "ABP-HideCursor"), Te = t(function () { g(m.videoDiv, "ABP-HideCursor") }, 3e3)) }), m.btnVolume[i]("click", function () { if (0 == m.video.muted) { if (m.video.muted = !0, 0 == m.video.muted) return void this.tooltip(ABP.Strings.muteNotSupported); this.className = "button ABP-Volume icon-volume-mute2", this.tooltip(ABP.Strings.unmute), m.barVolume.style.width = "0%" } else m.video.muted = !1, this.className = "button ABP-Volume icon-volume-", m.video.volume < .1 ? this.className += "mute" : m.video.volume < .33 ? this.className += "low" : m.video.volume < .67 ? this.className += "medium" : this.className += "high", this.tooltip(ABP.Strings.mute), m.barVolume.style.width = 100 * m.video.volume + "%" }), m.btnWebFull[i]("click", function () { m.state.fullscreen = h(n, "ABP-FullScreen"), g(n, "ABP-FullScreen"), m.btnFull.className = "button ABP-FullScreen icon-screen-normal", m.btnFull.tooltip(ABP.Strings.exitWebFull), m.state.fullscreen = !0, m.cmManager && m.cmManager.setBounds(), m.state.allowRescale && (m.state.fullscreen ? m.defaults.w > 0 && (m.cmManager.options.scrollScale = n.offsetWidth / m.defaults.w) : m.cmManager.options.scrollScale = 1) }); var Fe = !1, He = !1; m.btnFont[i]("click", function (e) { He && m.btnColor.click(), this.parentNode.classList.toggle("on"), Fe = !Fe }), m.btnColor[i]("click", function (e) { Fe && m.btnFont.click(), this.parentNode.classList.toggle("on"), He = !He }), m.btnAutoOpacity[i]("click", function (e) { this.classList.toggle("on"); var t = this.classList.contains("on"); m.cmManager.autoOpacity(t), this.tooltip(t ? ABP.Strings.autoOpacityOn : ABP.Strings.autoOpacityOff), at() }), m.btnProp[i]("click", function (e) { this.classList.toggle("on"); var t = this.classList.contains("on"); m.cmManager.useCSS(t), this.tooltip(t ? ABP.Strings.usingCSS : ABP.Strings.usingCanvas), at() }); var De = function () { !document.isFullScreen() && h(n, "ABP-FullScreen") && (y(n, "ABP-FullScreen"), m.btnFull.className = "button ABP-FullScreen icon-screen-full", m.btnFull.tooltip(ABP.Strings.fullScreen), m.state.fullscreen = !!document.isFullScreen()) }; document[i]("fullscreenchange", De, !1), document[i]("webkitfullscreenchange", De, !1), document[i]("mozfullscreenchange", De, !1), document[i]("MSFullscreenChange", De, !1), m.btnFull[i]("click", function () { m.state.fullscreen = h(n, "ABP-FullScreen"), m.state.fullscreen ? (y(n, "ABP-FullScreen"), this.className = "button ABP-FullScreen icon-screen-full", this.tooltip(ABP.Strings.fullScreen), document.exitFullscreen()) : (g(n, "ABP-FullScreen"), this.className = "button ABP-FullScreen icon-screen-normal", this.tooltip(ABP.Strings.exitFullScreen), n.requestFullScreen()), m.state.fullscreen = !m.state.fullscreen, m.cmManager && m.cmManager.setBounds(), m.state.allowRescale && (m.state.fullscreen ? m.defaults.w > 0 && (m.cmManager.options.scrollScale = n.offsetWidth / m.defaults.w) : m.cmManager.options.scrollScale = 1) }), m.btnWide[i]("click", function () { m.state.widescreen = h(n, "ABP-WideScreen"), m.state.widescreen ? (y(n, "ABP-WideScreen"), this.className = "button ABP-WideScreen icon-tv", n.dispatchEvent(new Event("normal")), this.tooltip(ABP.Strings.wideScreen)) : (g(n, "ABP-WideScreen"), this.className = "button ABP-WideScreen icon-tv on", n.dispatchEvent(new Event("wide")), this.tooltip(ABP.Strings.exitWideScreen)), m.state.widescreen = !m.state.widescreen, m.cmManager && m.cmManager.setBounds(), m.state.allowRescale && (m.state.fullscreen ? m.defaults.w > 0 && (m.cmManager.options.scrollScale = n.offsetWidth / m.defaults.w) : m.cmManager.options.scrollScale = 1) }), m.btnDm[i]("click", function () { 0 == m.cmManager.display ? (m.cmManager.display = !0, m.cmManager.startTimer(), this.className = "button ABP-CommentShow icon-comment on", this.tooltip(ABP.Strings.hideComment), y(m.playerUnit, "hide-comment")) : (m.cmManager.display = !1, m.cmManager.clear(), m.cmManager.stopTimer(), this.className = "button ABP-CommentShow icon-comment", this.tooltip(ABP.Strings.showComment), g(m.playerUnit, "hide-comment")), at() }), m.btnLoop[i]("click", function () { 0 == m.video.loop ? (m.video.loop = !0, this.className = "button ABP-Loop icon-loop on", this.tooltip(ABP.Strings.loopOn)) : (m.video.loop = !1, this.className = "button ABP-Loop icon-loop", this.tooltip(ABP.Strings.loopOff)), m.video.dispatchEvent(new CustomEvent("loop")) }); var Ee, Le, Ie, Oe = m.playerUnit.querySelector(".Context-Menu"), We = Oe.querySelector(".Context-Menu-Background"), Re = Oe.querySelector(".Context-Menu-Body"), Ve = function (e) { return Ke ? (e.preventDefault(), e.stopPropagation(), Ke = !1, !1) : (Oe.style.display = "none", void e.preventDefault()) }, ze = function (e) { for (var t = 0, a = -1, t = 0, i = m.commentObjArray.length; t < i; t++) if (m.commentObjArray[t].data.originalData.dbid == e) { a = t; break } a != -1 && (m.state.fullscreen && m.btnFull.click(), m.state.widescreen && m.btnWide.click(), m.commentListContainer.parentNode.scrollTop = 24 * a) }, qe = null, je = null, Ue = 0, Xe = null, Je = {}, Ye = function () { if (0 != Ue) { if (void 0 != Je[Ue]) return void Re.dispatchEvent(new CustomEvent("senderInfoFetched", { detail: Je[Ue] })); document.body.appendChild(e) } }, Ge = function (e, n, o) { Oe.style.display = "block"; var l, s, c, d, u, p = Re.getElementsByClassName("dm"), v = m.playerUnit.getBoundingClientRect(); for (P = p.length - 2; P >= 0; P--) p[P].remove(); for (l = Re.firstChild, P = 0; P < o.length; P++) { for (s = o[P].originalData, c = s.color.toString(16) ; c.length < 6;) c = "0" + c; if (d = 16777215 == s.color, u = r("div", { className: "dm" }, [r("div", { className: "content" }, [r("text", s.text)]), r("div", { className: "dmMenu" }, [r("div", { "data-content": s.text }, [r("text", ABP.Strings.copyComment)]), r("div", { "data-dmid": s.dbid }, [r("text", ABP.Strings.findComment)]), r("div", { onclick: 'shield.addText("' + s.text + '")' }, [r("text", ABP.Strings.blockContent + "“" + s.text + "”")]), r("div", { "data-mid": s.hash, onclick: 'shield.addUser("' + s.hash + '")' }, [r("text", ABP.Strings.blockUser + "(uid:" + s.hash + ")")]), r("div", d ? {} : { onclick: 'shield.addColor("' + c + '")' }, [r("text", d ? ABP.Strings.blockColorWhite : ABP.Strings.blockColor + ""), r("div", { className: "color", style: { background: "#" + c } })])])]), s.mode > 6) { u.childNodes[0].textContent = "特殊弹幕"; var f = u.childNodes[1]; f.childNodes[0].style.display = "none", f.childNodes[2].style.display = "none", f.childNodes[4].style.display = "none" } Re.insertBefore(u, l) } var g = Re.getElementsByClassName("dmMenu"); for (P = 0; P < g.length - 1; P++) g[P].childNodes[0][i]("click", function () { try { var e = m.txtText.value, t = m.txtText.disabled; t && (m.txtText.disabled = !1), m.txtText.value = this.dataset.content, m.txtText.select(); var a = document.execCommand("copy"); if (m.txtText.blur(), m.txtText.value = e, t && (m.txtText.disabled = !0), !a) throw "" } catch (e) { console.error(e), m.createPopup(ABP.Strings.copyFail, 3e3) } }), g[P].childNodes[1][i]("click", function () { ze(this.getAttribute("data-dmid")) }), g[P].childNodes[3][i]("mouseenter", function () { Ue = this.getAttribute("data-mid"), Xe = this, qe = t(Ye, 500) }), g[P].childNodes[3][i]("mouseleave", function () { a(qe), Ue = 0, Xe = null, null != document.getElementById("Sender-Info") && (a(je), je = t(function () { document.body.removeChild(document.getElementById("Sender-Info")) }, 500)) }); e -= v.left, n -= v.top, v.width - e < 300 && (e = v.width - 300), v.height - Re.offsetHeight - n < 0 && (n = v.height - Re.offsetHeight); var h = Re.querySelector(".dm:nth-last-of-type(2)>.dmMenu"); if (null != h) { h.style.display = "block"; var y = h.getBoundingClientRect(); h.style.display = "", v.top + v.height - y.height - n < 0 && (n = v.height - y.height) } Re.style.left = e + "px", Re.style.top = n + "px" }, Qe = null, Ke = !1, Ze = !1, $e = !1, et = !1, tt = null; Re.querySelector("#Player-Speed-Control .dmMenu")[i]("click", function (e) { var t = e.target.getAttribute("data-speed"); void 0 != t && (m.video.playbackRate = t) }), Re[i]("senderInfoFetched", function (e) { var n = e.detail; if (n.mid == Ue && null != Xe) { var o = Xe.parentNode.getBoundingClientRect(), l = o.left - 150, s = innerHeight - o.bottom, c = r("div", { className: "Context-Menu-Body", id: "Sender-Info", style: { left: l + "px", bottom: s + "px", position: "fixed", fontFamily: "-apple-system,Arial,'PingFang SC','STHeiti Light','Hiragino Kaku Gothic ProN','Microsoft YaHei'", textAlign: "center" } }, [r("div", {}, [r("img", { style: { height: "130px", width: "130px" }, src: n.face })]), r("div", {}, [r("text", n.name)]), r("div", {}, [r("text", n.mid)]), r("div", {}, [r("text", "LV" + n.level_info.current_level)])]); m.playerUnit.appendChild(c), s + c.offsetHeight > innerHeight && (c.style.bottom = "", c.style.top = o.top + "px"), c[i]("click", function () { window.open("/u/" + n.mid + ""), document.body.removeChild(c) }), c[i]("mouseenter", function () { a(je) }), c[i]("mouseleave", function () { a(je), je = t(function () { document.body.removeChild(document.getElementById("Sender-Info")) }, 500) }) } }), window.getSenderInfo = function (e) { 0 == e.code && (Je[Ue] = e.card, Re.dispatchEvent(new CustomEvent("senderInfoFetched", { detail: e.card }))) }, Oe[i]("click", Ve), We[i]("contextmenu", Ve), m.videoDiv.parentNode[i]("contextmenu", function (e) { e.preventDefault(), e.stopPropagation(); var t = m.divComment.getBoundingClientRect(), a = e.clientX, i = e.clientY; Ge(a, i, m.cmManager.getCommentFromPoint(a - t.left, i - t.top)) }), m.commentListContainer[i]("contextmenu", function (e) { var t = e.target.parentNode.data; return void 0 != t && (e.preventDefault(), e.stopPropagation(), void Ge(e.clientX, e.clientY, [t])) }), m.videoDiv.parentNode[i]("touchstart", function (e) { if (Ze = !1, $e = !1, Ie = m.video.currentTime, Ke = !1, e.touches.length > 1 && null != Qe) return a(Qe), void (Qe = null); var i = m.divComment.getBoundingClientRect(), n = e.touches[0].clientX, o = e.touches[0].clientY, l = m.cmManager.getCommentFromPoint(n - i.left, o - i.top); Ee = n, Le = o, Qe = t(function () { $e = !0, Qe = null, Ke = !0, Ge(n, o, l) }, 300) }), m.playerUnit.querySelector(".shield")[i]("touchstart touchmove touchend", function (e) { e.stopPropagation() }), m.videoDiv.parentNode[i]("touchmove", function (e) { null != Qe && (a(Qe), Qe = null); var t = e.touches[0].clientX, i = e.touches[0].clientY, n = t - Ee, o = i - Le, l = m.videoDiv.getBoundingClientRect(), s = (l.width, l.height); if (Ze) { var r = 0, c = n > 0 ? 1 : 0, d = ["Low", "Med", "High"], u = m.video.duration; i < s / 3 ? Ie += .2 * n : i < 2 * s / 3 ? (Ie += .6 * n, r = 1) : (Ie += 1.5 * n, r = 2), Ie = Ie < 0 ? 0 : Ie > u ? u : Ie, Ee += n, Ee - l.left < 50 || l.right - Ee < 50 ? (document.querySelector(".Drag-Icon").className = "Drag-Icon cancel", te(".Drag-Speed").textContent = ABP.Strings.dragControlCancel, te(".Drag-Time").textContent = "　", et = !0) : (document.querySelector(".Drag-Icon").className = "Drag-Icon " + (c ? "forward" : "rewind"), te(".Drag-Speed").textContent = ABP.Strings["dragControl" + d[r] + (c ? "Inc" : "Dec")], te(".Drag-Time").textContent = p(Ie) + "╱" + p(u), et = !1, u > 0 && (document.querySelector(".Drag-Time-Bar .fill").style.width = Ie / u * 100 + "%")) } else $e || (n < -10 || n > 10 ? (Ze = !0, null != tt && (a(tt), tt = null), te(".Drag-Control").style.display = "block") : (o < -10 || o > 10) && ($e = !0)) }), m.videoDiv.parentNode[i]("touchend", function () { null != Qe && (a(Qe), Qe = null), Ze && !et && (m.video.currentTime = Ie), tt = t(function () { te(".Drag-Control").style.display = "none" }, 1e3) }), Re[i]("touchstart", function (e) { var t = Re.getBoundingClientRect(); e.touches[0].clientX - t.left <= t.width && e.touches[0].clientY - t.top <= t.height && (Ke = !0) }); var at = function () { m.inited && (localStorage.html5Settings = JSON.stringify({ volume: m.video.volume, opacity: m.cmManager.options.global.opacity, scale: m.commentScale, speed: m.commentSpeed, commentVisible: m.cmManager.display, autoOpacity: m.cmManager.options.global.autoOpacity, useCSS: m.cmManager.options.global.useCSS, autoPlay: m.autoPlay, defaultWide: m.defaultWide, defaultFull: m.defaultFull, playSpeed: m.video.playbackRate, recordPlaySpeed: m.recordPlaySpeed, theme: document.getElementById("setting-playerTheme").value, density: m.cmManager.options.global.density })) }, it = function () { var e = new Date, a = "" + e.getTime() + Math.random(); return "" != m.txtText.value && !m.txtText.disabled && (m.playerUnit.dispatchEvent(new CustomEvent("sendcomment", { detail: { id: a, message: m.txtText.value, fontsize: m.commentFontSize, color: parseInt("0x" + m.commentColor), date: e.getFullYear() + "-" + d(e.getMonth()) + "-" + d(e.getDay()) + " " + d(e.getHours()) + ":" + d(e.getMinutes()) + ":" + d(e.getSeconds()), playTime: m.video.currentTime, mode: m.commentMode, pool: 0 } })), m.cmManager.send({ text: m.txtText.value, mode: m.commentMode, stime: m.video.currentTime, size: m.commentFontSize, color: parseInt("0x" + m.commentColor), border: !0 }), m.commentList[a] = { date: parseInt(e.getTime() / 1e3), time: 1e3 * m.video.currentTime, mode: m.commentMode, user: "-", pool: 0, content: m.txtText.value }, m.txtText.value = "", m.txtText.disabled = !0, void t(function () { m.txtText.disabled = !1 }, m.commentCoolDown)) }; m.txtText.parentNode[i]("submit", function (e) { return e.preventDefault(), it(), !1 }), m.btnSend[i]("click", it), m.timeLabel[i]("click", function () { m.timeJump = r("input", { className: "time-jump" }), m.timeJump.value = p(m.video.currentTime), m.controlBar.appendChild(m.timeJump), m.timeJump[i]("blur", function () { m.timeJump && m.timeJump.parentNode.removeChild(m.timeJump), m.timeJump = null }), m.timeJump[i]("keydown", function (e) { if (13 == e.keyCode) { var t = v(m.timeJump.value); t && t <= m.video.duration && (m.video.currentTime = t, m.video.paused && m.btnPlay.click()), m.timeJump.parentNode.removeChild(m.timeJump) } else (e.keyCode < 48 || e.keyCode > 59) && (e.keyCode < 96 || e.keyCode > 105) && 8 != e.keyCode && 16 != e.keyCode && 37 != e.keyCode && 39 != e.keyCode && 46 != e.keyCode && e.preventDefault() }), m.timeJump.focus(), m.timeJump.select() }), m.barTime.style.width = "0%"; var nt = !1; m.barTimeHitArea[i]("mousedown", function (e) { nt = !0 }); var ot = { imgs: [], data: [], len: [0, 0], size: [0, 0] }, lt = function (e) { if (0 != e.code || !e.data) return !1; var t = e.data; ot.imgs = JSON.parse(JSON.stringify(t.image).replace(/\"\/\//g, '"http://')), ot.len = [t.img_x_len, t.img_y_len], ot.size = [t.img_x_size, t.img_y_size]; var a = new XMLHttpRequest; a.open("GET", "/api/videoshot_index?file=" + encodeURIComponent(t.pvdata), !0), a.onreadystatechange = function (e) { if (4 == a.readyState && 200 == a.status) { var t = JSON.parse(a.response); t.index.shift(), ot.data = t.index } }, a.send() }, st = !1; m.barTimeHitArea[i]("mouseenter", function (e) { st = !0 }), m.barTimeHitArea[i]("mouseleave", function (e) { st = !1 }), void 0 != window.cid && getjson("/danmaku/pvinfo/" + window.cid + ".json", lt), m.playerUnit[i]("cidchange", function () { getjson("/danmaku/pvinfo/" + window.cid + ".json", lt); try { var e = JSON.parse(localStorage.playHistory || "{}"); void 0 != e[cid] && (m.lastTime = e[cid]) } catch (e) { } }), document[i]("mouseup", function (e) { if (nt) { var t = (e.clientX - m.barTimeHitArea.getBoundingClientRect().left) / m.barTimeHitArea.offsetWidth * m.video.duration; t < 0 && (t = 0), Math.abs(t - m.video.currentTime) > 4 && m.cmManager && m.cmManager.clear(), m.video.currentTime = t } nt = !1 }); var rt = function (e) { m.barTime.style.width = e / C.duration * 100 + "%", m.timeLabel.textContent = p(e) + " / " + p(C.duration) }; document[i]("mousemove", function (e) { var t = (e.clientX - m.barTimeHitArea.getBoundingClientRect().left) / m.barTimeHitArea.offsetWidth * m.video.duration; if (t < 0 && (t = 0), t > m.video.duration && (t = m.video.duration), ot.data.length > 0 && null != s("ABP-Tooltip") && st) { var a; for (a = 0; a < ot.data.length; a++) if (t < ot.data[a]) { a--; break } var i = Math.floor(a / 100), n = Math.floor(a % 100 / 10), o = a % 10, l = s("preview-container"), c = s("ABP-Tooltip"); null == l && (l = r("div", { id: "preview-container", style: { position: "absolute", "background-size": ot.size[0] + "px " + ot.size[1] + "px", width: ot.size[0] + "px", height: ot.size[1] + "px", background: "rgba(0,0,0,0)", display: "none" } }), c.parentNode.insertBefore(l, c)), l.style.left = c.offsetLeft + (c.offsetWidth - ot.size[0]) / 2 + "px", l.style.top = c.offsetTop + (c.offsetHeight - ot.size[1]) + "px", l.style.display = "block", l.style.backgroundImage = 'url("' + ot.imgs[i] + '")', l.style.backgroundPosition = "-" + o * ot.size[0] + "px -" + n * ot.size[1] + "px" } null == s("ABP-Tooltip") && null != s("preview-container") && (s("preview-container").style.display = "none"), m.barTimeHitArea.tooltip(p(t)), nt && rt(t) }), f(m.barTimeHitArea, !0, -12); var ct = !1; m.barVolumeHitArea[i]("mousedown", function (e) { ct = !0 }); var dt = null, mt = function () { dt && a(dt), g(n, "volume-show") }, ut = function () { dt = t(function () { y(n, "volume-show") }, 2e3) }; m.barVolumeHitArea[i]("mouseenter", mt), m.btnVolume[i]("mouseenter", mt), m.barVolumeHitArea[i]("mouseleave", ut), m.btnVolume[i]("mouseleave", ut), m.barVolume.style.width = 100 * m.video.volume + "%"; var pt = function (e) { m.barVolume.style.width = 100 * e + "%", m.video.muted = !1, m.btnVolume.className = "button ABP-Volume icon-volume-", e < .1 ? m.btnVolume.className += "mute" : e < .33 ? m.btnVolume.className += "low" : e < .67 ? m.btnVolume.className += "medium" : m.btnVolume.className += "high", m.btnVolume.tooltip(ABP.Strings.mute), m.barVolumeHitArea.tooltip(parseInt(100 * e) + "%"), at() }; document[i]("mouseup", function (e) { if (ct) { var t = (e.clientX - m.barVolumeHitArea.getBoundingClientRect().left) / m.barVolumeHitArea.offsetWidth; t < 0 && (t = 0), t > 1 && (t = 1), m.video.volume = t, pt(m.video.volume) } ct = !1 }), document[i]("mousemove", function (e) { var t = (e.clientX - m.barVolumeHitArea.getBoundingClientRect().left) / m.barVolumeHitArea.offsetWidth; t < 0 && (t = 0), t > 1 && (t = 1), ct ? (m.video.volume = t, pt(m.video.volume)) : m.barVolumeHitArea.tooltip(parseInt(100 * t) + "%") }), f(m.barVolumeHitArea, !0, -12); var vt = !1; m.barOpacityHitArea[i]("mousedown", function (e) { vt = !0 }), m.barOpacity.style.width = 100 * m.cmManager.options.global.opacity + "%"; var ft = function (e) { m.barOpacity.style.width = 100 * e + "%", m.barOpacityHitArea.tooltip(parseInt(100 * e) + "%") }; document[i]("mouseup", function (e) { if (vt) { var t = (e.clientX - m.barOpacityHitArea.getBoundingClientRect().left) / m.barOpacityHitArea.offsetWidth; t < 0 && (t = 0), t > 1 && (t = 1), m.cmManager.options.global.opacity = t, ft(m.cmManager.options.global.opacity), at() } vt = !1 }), document[i]("mousemove", function (e) { var t = (e.clientX - m.barOpacityHitArea.getBoundingClientRect().left) / m.barOpacityHitArea.offsetWidth; t < 0 && (t = 0), t > 1 && (t = 1), vt ? (m.cmManager.options.global.opacity = t, ft(m.cmManager.options.global.opacity)) : m.barOpacityHitArea.tooltip(parseInt(100 * t) + "%") }), f(m.barOpacityHitArea, !0, -6); var gt = !1; m.barScaleHitArea[i]("mousedown", function (e) { gt = !0 }), m.barScale.style.width = (m.commentScale - .2) / 1.8 * 100 + "%"; var ht = function (e) { m.barScale.style.width = (e - .2) / 1.8 * 100 + "%", m.barScaleHitArea.tooltip(parseInt(100 * e) + "%"), m.cmManager.setBounds() }; document[i]("mouseup", function (e) {
                                                                                                                        if (gt) {
                                                                                                                            var t = .2 + 1.8 * (e.clientX - m.barScaleHitArea.getBoundingClientRect().left) / m.barScaleHitArea.offsetWidth;
                                                                                                                            t < .2 && (t = .2), t > 2 && (t = 2), m.commentScale = t, ht(m.commentScale), at()
                                                                                                                        } gt = !1
                                                                                                                    }), document[i]("mousemove", function (e) { var t = .2 + 1.8 * (e.clientX - m.barScaleHitArea.getBoundingClientRect().left) / m.barScaleHitArea.offsetWidth; t < .2 && (t = .2), t > 2 && (t = 2), gt ? (m.commentScale = t, ht(m.commentScale)) : m.barScaleHitArea.tooltip(parseInt(100 * t) + "%") }), f(m.barScaleHitArea, !0, -6); var yt = !1; m.barDensityHitArea[i]("mousedown", function () { yt = !0 }); var bt = function (e) { return e >= 5 && e < 100 ? 5 * (e / 5 | 0) : e >= 100 && e <= 1e3 ? 100 * (e / 100 | 0) : 0 }, St = function (e) { e = bt(e); var t = 100; e >= 5 && e < 100 ? t = (e / 5 - 1) / 19 * 80 : e >= 100 && e <= 1e3 && (t = (e / 100 - 1) / 9 * 15 + 80), m.barDensity.style.width = t + "%", m.barDensityHitArea.tooltip(e || "无限制") }; document[i]("mouseup", function (e) { if (yt) { var t = (e.clientX - m.barScaleHitArea.getBoundingClientRect().left) / m.barScaleHitArea.offsetWidth, a = 0; t >= 0 && t < .8 ? a = 5 * Math.round(t / .8 * 19) + 5 : t >= .8 && t <= .95 && (a = 100 * Math.round((t - .8) / .15 * 9) + 100), m.cmManager.options.global.density = a, St(a), at() } yt = !1 }), document[i]("mousemove", function (e) { var t = (e.clientX - m.barScaleHitArea.getBoundingClientRect().left) / m.barScaleHitArea.offsetWidth, a = 0; t >= 0 && t < .8 ? a = 5 * Math.round(t / .8 * 19) + 5 : t >= .8 && t <= .95 && (a = 100 * Math.round((t - .8) / .15 * 9) + 100), yt ? (m.cmManager.options.global.density = a, St(a)) : m.barDensityHitArea.tooltip(a || "无限制") }), f(m.barDensityHitArea, !0, -6), St(m.cmManager.options.global.density); var Bt = !1; m.barSpeedHitArea[i]("mousedown", function (e) { Bt = !0 }), m.barSpeed.style.width = (m.commentSpeed - .5) / 1.5 * 100 + "%"; var Ct = function (e) { m.barSpeed.style.width = (e - .5) / 1.5 * 100 + "%", m.barSpeedHitArea.tooltip(parseInt(100 * e) + "%"), m.cmManager.setBounds(), at() }; document[i]("mouseup", function (e) { if (Bt) { var t = .5 + 1.5 * (e.clientX - m.barSpeedHitArea.getBoundingClientRect().left) / m.barSpeedHitArea.offsetWidth; t < .5 && (t = .5), t > 2 && (t = 2), m.commentSpeed = t, Ct(m.commentSpeed), at() } Bt = !1 }), document[i]("mousemove", function (e) { var t = .5 + 1.5 * (e.clientX - m.barSpeedHitArea.getBoundingClientRect().left) / m.barSpeedHitArea.offsetWidth; t < .5 && (t = .5), t > 2 && (t = 2), Bt ? (m.commentSpeed = t, Ct(m.commentSpeed)) : m.barSpeedHitArea.tooltip(parseInt(100 * t) + "%") }), f(m.barSpeedHitArea, !0, -6); var Pt = !1; m.barPlaySpeedHitArea[i]("mousedown", function (e) { Pt = !0 }), m.barPlaySpeed.style.width = (m.video.playbackRate - .5) / 1.5 * 100 + "%"; var At = function (e) { m.barPlaySpeed.style.width = (e - .5) / 1.5 * 100 + "%", m.barPlaySpeedHitArea.tooltip(e.toFixed(2) + "x") }; document[i]("mouseup", function (e) { if (Pt) { var t = .5 + 1.5 * (e.clientX - m.barPlaySpeedHitArea.getBoundingClientRect().left) / m.barPlaySpeedHitArea.offsetWidth; t < .5 && (t = .5), t > 2 && (t = 2), m.video.playbackRate = t } Pt = !1 }), document[i]("mousemove", function (e) { var t = .5 + 1.5 * (e.clientX - m.barPlaySpeedHitArea.getBoundingClientRect().left) / m.barPlaySpeedHitArea.offsetWidth; t < .5 && (t = .5), t > 2 && (t = 2), Pt ? m.video.playbackRate = t : m.barPlaySpeedHitArea.tooltip(t.toFixed(2) + "x") }), f(m.barPlaySpeedHitArea, !0, -6), m.btnPlay[i]("click", function () { m.video.paused ? m.video.play() : m.video.pause() }), n[i]("keydown", function (e) { if (e && "INPUT" != document.activeElement.tagName) switch ([27, 32, 37, 38, 39, 40].indexOf(e.keyCode) != -1 && e.preventDefault(), e.keyCode) { case 27: m.state.fullscreen && m.btnFull.click(); break; case 32: m.btnPlay.click(); break; case 37: var t = m.video.currentTime -= 5 * m.video.playbackRate; m.cmManager.clear(), t < 0 && (t = 0), m.video.currentTime = t.toFixed(3), m.video.paused && m.btnPlay.click(), rt(C.currentTime), m.barTimeHitArea.tooltip(p(C.currentTime)); break; case 39: var t = m.video.currentTime += 5 * m.video.playbackRate; m.cmManager.clear(), t > m.video.duration && (t = m.video.duration), m.video.currentTime = t.toFixed(3), m.video.paused && m.btnPlay.click(), rt(C.currentTime), m.barTimeHitArea.tooltip(p(C.currentTime)); break; case 38: if (e.ctrlKey) { var a = m.video.playbackRate + .05; a > 2 && (a = 2), m.video.playbackRate = a.toFixed(3), m.removePopup(), m.createPopup(ABP.Strings.rateChange + (100 * a | 0) + "%", 1e3) } else { var i = m.video.volume + .1; i > 1 && (i = 1), m.video.volume = i.toFixed(3), pt(m.video.volume), m.removePopup(), m.createPopup(ABP.Strings.volumeChange + (100 * i | 0) + "%", 1e3) } break; case 40: if (e.ctrlKey) { var a = m.video.playbackRate - .05; a < .5 && (a = .5), m.video.playbackRate = a.toFixed(3), m.removePopup(), m.createPopup(ABP.Strings.rateChange + (100 * a | 0) + "%", 1e3) } else { var i = m.video.volume - .1; i < 0 && (i = 0), m.video.volume = i.toFixed(3), pt(m.video.volume), m.removePopup(), m.createPopup(ABP.Strings.volumeChange + (100 * i | 0) + "%", 1e3) } } }), n.firstChild[i]("touchmove", function (e) { e.preventDefault() }); var xt = null; n[i]("touchstart", function (e) { h(m.videoDiv, "ABP-HideCursor") && y(m.videoDiv, "ABP-HideCursor"), e.targetTouches.length > 0 && (xt = e.targetTouches[0]) }), n[i]("touchend", function (e) { if (g(m.videoDiv, "ABP-HideCursor"), e.changedTouches.length > 0 && null != xt) { var t = e.changedTouches[0].pageX - xt.pageX, a = e.changedTouches[0].pageY - xt.pageY; if (Math.abs(t) < 20 && Math.abs(a) < 20) return void (xt = null); Math.abs(t) > 3 * Math.abs(a) ? t > 0 ? m.video.paused && m.btnPlay.click() : m.video.paused || m.btnPlay.click() : Math.abs(a) > 3 * Math.abs(t) && (a < 0 ? m.video.volume = Math.min(1, m.video.volume + .1) : m.video.volume = Math.max(0, m.video.volume - .1)), xt = null } }), n[i]("mouseup", function () { if ("INPUT" != document.activeElement.tagName) { var e = window.scrollY; m.videoDiv.focus(), window.scrollTo(window.scrollX, e) } })
                                                                                                                } if ("undefined" != typeof CommentManager && m.state.autosize) { var kt = function () { if (0 !== C.videoHeight && 0 !== C.videoWidth) { var e = C.videoHeight / C.videoWidth, t = n.offsetWidth, a = n.offsetHeight, i = a / t; i < e ? (n.style.width = a / e + "px", n.style.height = a + "px") : (n.style.width = t + "px", n.style.height = t * e + "px"), m.cmManager.setBounds() } }; C[i]("loadedmetadata", kt), kt() } if (window.cid && window.WebSocket) { var Nt = function () { function e(e, t) { var a = new Uint8Array(e), i = new Uint8Array(t), n = new Uint8Array(e.byteLength + t.byteLength); return n.set(a, 0), n.set(i, e.byteLength), n.buffer } function t(e) { this.connection = new WebSocket("wss://broadcast.chat.bilibili.com:4095/sub"), this.connection.binaryType = "arraybuffer", this.connection.onopen = this.firstConnection.bind(this), this.connection.onmessage = a.bind(this), this.connection.onclose = i.bind(this), this.connection.onerror = n.bind(this), this.roomid = e } function a(e) { var t = e.data, a = new DataView(t, 0), i = a.getUint32(s); if (a.byteLength >= i) { var n = a.getInt16(r), l = (a.getInt16(c), a.getUint32(d)); a.getUint32(m); switch (l) { case 8: this.heartBeat(), o = setInterval(this.heartBeat.bind(this), 3e4); break; case 3: this._listener && this._listener("online", a.getInt32(16)); break; case 5: for (var p, v = a, f = t, g = 0; g < f.byteLength; g += i) i = v.getUint32(g), n = v.getInt16(g + r), p = u(f.slice(g + n, g + i)), this._listener && this._listener("msg", p) } } } function i() { o && clearInterval(o), this._listener && this._listener("close") } function n() { this._listener && this._listener("error") } var o, l = 16, s = 0, r = 4, c = 6, d = 8, m = 12, u = function (e) { return decodeURIComponent(window.escape(String.fromCharCode.apply(null, new Uint8Array(e)))) }, p = function (e) { for (var t = new ArrayBuffer(e.length), a = new Uint8Array(t), i = 0, n = e.length; i < n; i++) a[i] = e.charCodeAt(i); return a }; return t.prototype.firstConnection = function () { var t = JSON.stringify({ uid: window.UID || 0, roomid: this.roomid, protover: 1 }), a = new ArrayBuffer(l), i = new DataView(a, 0), n = p(t); i.setInt32(s, l + n.byteLength), i.setInt16(r, l), i.setInt16(c, 1), i.setInt32(d, 7), i.setInt32(m, 1), this.connection.send(e(a, n)) }, t.prototype.heartBeat = function () { var e = new ArrayBuffer(l), t = new DataView(e, 0); t.setInt32(s, l), t.setInt16(r, l), t.setInt16(c, 1), t.setInt32(d, 2), t.setInt32(m, 1), this.connection.send(e) }, t.prototype.closeHeartBeat = function () { clearInterval(this.heartBeating) }, t.prototype.send = function (e) { this.connection.send(e) }, t.prototype.close = function () { this.connection.close() }, t.prototype.setListener = function (e) { this._listener = e }, t.prototype.removeListener = function () { this._listener = null }, t }(), wt = new Nt(window.cid); wt.setListener(c), m.reconnectSocket = function () { wt.removeListener(), wt.close(), wt = new Nt(window.cid), wt.setListener(c) } } var _t = function (e) { var t = m.state.widescreen, a = m.state.fullscreen, i = m.playerUnit.querySelector(".ABP-Player .ABP-Comment-List-Count"), n = m.playerUnit.querySelector(".ABP-Comment-List .ABP-Comment-List-Count"); if (t || a) null != n && m.playerUnit.querySelector(".ABP-Player").appendChild(n); else if (null != i) { var o = m.playerUnit.querySelector(".ABP-Comment-List"); o.insertBefore(i, o.childNodes[0]) } }; return m.controlBar[i]("click", _t), shield.init(m), m
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
})(), function (e) { var t = function () { var t = '<div class="colpick"><div class="colpick_color"><div class="colpick_color_overlay1"><div class="colpick_color_overlay2"><div class="colpick_selector_outer"><div class="colpick_selector_inner"></div></div></div></div></div><div class="colpick_hue"><div class="colpick_hue_arrs"><div class="colpick_hue_larr"></div><div class="colpick_hue_rarr"></div></div></div><div class="colpick_new_color"></div><div class="colpick_current_color"></div><div class="colpick_hex_field"><div class="colpick_field_letter">#</div><input type="text" maxlength="6" size="6" /></div><div class="colpick_rgb_r colpick_field"><div class="colpick_field_letter">R</div><input type="text" maxlength="3" size="3" /><div class="colpick_field_arrs"><div class="colpick_field_uarr"></div><div class="colpick_field_darr"></div></div></div><div class="colpick_rgb_g colpick_field"><div class="colpick_field_letter">G</div><input type="text" maxlength="3" size="3" /><div class="colpick_field_arrs"><div class="colpick_field_uarr"></div><div class="colpick_field_darr"></div></div></div><div class="colpick_rgb_b colpick_field"><div class="colpick_field_letter">B</div><input type="text" maxlength="3" size="3" /><div class="colpick_field_arrs"><div class="colpick_field_uarr"></div><div class="colpick_field_darr"></div></div></div><div class="colpick_hsb_h colpick_field"><div class="colpick_field_letter">H</div><input type="text" maxlength="3" size="3" /><div class="colpick_field_arrs"><div class="colpick_field_uarr"></div><div class="colpick_field_darr"></div></div></div><div class="colpick_hsb_s colpick_field"><div class="colpick_field_letter">S</div><input type="text" maxlength="3" size="3" /><div class="colpick_field_arrs"><div class="colpick_field_uarr"></div><div class="colpick_field_darr"></div></div></div><div class="colpick_hsb_b colpick_field"><div class="colpick_field_letter">B</div><input type="text" maxlength="3" size="3" /><div class="colpick_field_arrs"><div class="colpick_field_uarr"></div><div class="colpick_field_darr"></div></div></div><div class="colpick_submit"></div></div>', a = { showEvent: "click", onShow: function () { }, onBeforeShow: function () { }, onHide: function () { }, onChange: function () { }, onSubmit: function () { }, colorScheme: "light", color: "3289c7", livePreview: !0, flat: !1, layout: "full", submit: 1, submitText: "OK", height: 156 }, l = function (t, a) { var i = o(t); e(a).data("colpick").fields.eq(1).val(i.r).end().eq(2).val(i.g).end().eq(3).val(i.b).end() }, r = function (t, a) { e(a).data("colpick").fields.eq(4).val(Math.round(t.h)).end().eq(5).val(Math.round(t.s)).end().eq(6).val(Math.round(t.b)).end() }, c = function (t, a) { e(a).data("colpick").fields.eq(0).val(s(t)) }, d = function (t, a) { e(a).data("colpick").selector.css("backgroundColor", "#" + s({ h: t.h, s: 100, b: 100 })), e(a).data("colpick").selectorIndic.css({ left: parseInt(e(a).data("colpick").height * t.s / 100, 10), top: parseInt(e(a).data("colpick").height * (100 - t.b) / 100, 10) }) }, m = function (t, a) { e(a).data("colpick").hue.css("top", parseInt(e(a).data("colpick").height - e(a).data("colpick").height * t.h / 360, 10)) }, u = function (t, a) { e(a).data("colpick").currentColor.css("backgroundColor", "#" + s(t)) }, p = function (t, a) { e(a).data("colpick").newColor.css("backgroundColor", "#" + s(t)) }, v = function (t) { var a, u = e(this).parent().parent(); this.parentNode.className.indexOf("_hex") > 0 ? (u.data("colpick").color = a = i(F(this.value)), l(a, u.get(0)), r(a, u.get(0))) : this.parentNode.className.indexOf("_hsb") > 0 ? (u.data("colpick").color = a = M({ h: parseInt(u.data("colpick").fields.eq(4).val(), 10), s: parseInt(u.data("colpick").fields.eq(5).val(), 10), b: parseInt(u.data("colpick").fields.eq(6).val(), 10) }), l(a, u.get(0)), c(a, u.get(0))) : (u.data("colpick").color = a = n(T({ r: parseInt(u.data("colpick").fields.eq(1).val(), 10), g: parseInt(u.data("colpick").fields.eq(2).val(), 10), b: parseInt(u.data("colpick").fields.eq(3).val(), 10) })), c(a, u.get(0)), r(a, u.get(0))), d(a, u.get(0)), m(a, u.get(0)), p(a, u.get(0)), u.data("colpick").onChange.apply(u.parent(), [a, s(a), o(a), u.data("colpick").el, 0]) }, f = function (t) { e(this).parent().removeClass("colpick_focus") }, g = function () { e(this).parent().parent().data("colpick").fields.parent().removeClass("colpick_focus"), e(this).parent().addClass("colpick_focus") }, h = function (t) { t.preventDefault ? t.preventDefault() : t.returnValue = !1; var a = e(this).parent().find("input").focus(), i = { el: e(this).parent().addClass("colpick_slider"), max: this.parentNode.className.indexOf("_hsb_h") > 0 ? 360 : this.parentNode.className.indexOf("_hsb") > 0 ? 100 : 255, y: t.pageY, field: a, val: parseInt(a.val(), 10), preview: e(this).parent().parent().data("colpick").livePreview }; e(document).mouseup(i, b), e(document).mousemove(i, y) }, y = function (e) { return e.data.field.val(Math.max(0, Math.min(e.data.max, parseInt(e.data.val - e.pageY + e.data.y, 10)))), e.data.preview && v.apply(e.data.field.get(0), [!0]), !1 }, b = function (t) { return v.apply(t.data.field.get(0), [!0]), t.data.el.removeClass("colpick_slider").find("input").focus(), e(document).off("mouseup", b), e(document).off("mousemove", y), !1 }, S = function (t) { t.preventDefault ? t.preventDefault() : t.returnValue = !1; var a = { cal: e(this).parent(), y: e(this).offset().top }; e(document).on("mouseup touchend", a, C), e(document).on("mousemove touchmove", a, B); var i = "touchstart" == t.type ? t.originalEvent.changedTouches[0].pageY : t.pageY; return v.apply(a.cal.data("colpick").fields.eq(4).val(parseInt(360 * (a.cal.data("colpick").height - (i - a.y)) / a.cal.data("colpick").height, 10)).get(0), [a.cal.data("colpick").livePreview]), !1 }, B = function (e) { var t = "touchmove" == e.type ? e.originalEvent.changedTouches[0].pageY : e.pageY; return v.apply(e.data.cal.data("colpick").fields.eq(4).val(parseInt(360 * (e.data.cal.data("colpick").height - Math.max(0, Math.min(e.data.cal.data("colpick").height, t - e.data.y))) / e.data.cal.data("colpick").height, 10)).get(0), [e.data.preview]), !1 }, C = function (t) { return l(t.data.cal.data("colpick").color, t.data.cal.get(0)), c(t.data.cal.data("colpick").color, t.data.cal.get(0)), e(document).off("mouseup touchend", C), e(document).off("mousemove touchmove", B), !1 }, P = function (t) { t.preventDefault ? t.preventDefault() : t.returnValue = !1; var a = { cal: e(this).parent(), pos: e(this).offset() }; a.preview = a.cal.data("colpick").livePreview, e(document).on("mouseup touchend", a, x), e(document).on("mousemove touchmove", a, A); var i, n; return "touchstart" == t.type ? (i = t.originalEvent.changedTouches[0].pageX, n = t.originalEvent.changedTouches[0].pageY) : (i = t.pageX, n = t.pageY), v.apply(a.cal.data("colpick").fields.eq(6).val(parseInt(100 * (a.cal.data("colpick").height - (n - a.pos.top)) / a.cal.data("colpick").height, 10)).end().eq(5).val(parseInt(100 * (i - a.pos.left) / a.cal.data("colpick").height, 10)).get(0), [a.preview]), !1 }, A = function (e) { var t, a; return "touchmove" == e.type ? (t = e.originalEvent.changedTouches[0].pageX, a = e.originalEvent.changedTouches[0].pageY) : (t = e.pageX, a = e.pageY), v.apply(e.data.cal.data("colpick").fields.eq(6).val(parseInt(100 * (e.data.cal.data("colpick").height - Math.max(0, Math.min(e.data.cal.data("colpick").height, a - e.data.pos.top))) / e.data.cal.data("colpick").height, 10)).end().eq(5).val(parseInt(100 * Math.max(0, Math.min(e.data.cal.data("colpick").height, t - e.data.pos.left)) / e.data.cal.data("colpick").height, 10)).get(0), [e.data.preview]), !1 }, x = function (t) { return l(t.data.cal.data("colpick").color, t.data.cal.get(0)), c(t.data.cal.data("colpick").color, t.data.cal.get(0)), e(document).off("mouseup touchend", x), e(document).off("mousemove touchmove", A), !1 }, k = function (t) { var a = e(this).parent(), i = a.data("colpick").color; a.data("colpick").origColor = i, u(i, a.get(0)), a.data("colpick").onSubmit(i, s(i), o(i), a.data("colpick").el) }, N = function (t) { t.stopPropagation(); var a = e("#" + e(this).data("colpickId")); a.data("colpick").onBeforeShow.apply(this, [a.get(0)]); var i = e(this).offset(), n = i.top + this.offsetHeight, o = i.left, l = _(), s = a.width(); o + s > l.l + l.w && (o -= s), a.css({ left: o + "px", top: n + "px" }), 0 != a.data("colpick").onShow.apply(this, [a.get(0)]) && a.show(), e("html").mousedown({ cal: a }, w), a.mousedown(function (e) { e.stopPropagation() }) }, w = function (t) { 0 != t.data.cal.data("colpick").onHide.apply(this, [t.data.cal.get(0)]) && t.data.cal.hide(), e("html").off("mousedown", w) }, _ = function () { var e = "CSS1Compat" == document.compatMode; return { l: window.pageXOffset || (e ? document.documentElement.scrollLeft : document.body.scrollLeft), w: window.innerWidth || (e ? document.documentElement.clientWidth : document.body.clientWidth) } }, M = function (e) { return { h: Math.min(360, Math.max(0, e.h)), s: Math.min(100, Math.max(0, e.s)), b: Math.min(100, Math.max(0, e.b)) } }, T = function (e) { return { r: Math.min(255, Math.max(0, e.r)), g: Math.min(255, Math.max(0, e.g)), b: Math.min(255, Math.max(0, e.b)) } }, F = function (e) { var t = 6 - e.length; if (t > 0) { for (var a = [], i = 0; i < t; i++) a.push("0"); a.push(e), e = a.join("") } return e }, H = function () { var t = e(this).parent(), a = t.data("colpick").origColor; t.data("colpick").color = a, l(a, t.get(0)), c(a, t.get(0)), r(a, t.get(0)), d(a, t.get(0)), m(a, t.get(0)), p(a, t.get(0)) }; return { init: function (o) { if (o = e.extend({}, a, o || {}), "string" == typeof o.color) o.color = i(o.color); else if (void 0 != o.color.r && void 0 != o.color.g && void 0 != o.color.b) o.color = n(o.color); else { if (void 0 == o.color.h || void 0 == o.color.s || void 0 == o.color.b) return this; o.color = M(o.color) } return this.each(function () { if (!e(this).data("colpickId")) { var a = e.extend({}, o); a.origColor = o.color; var i = "collorpicker_" + parseInt(1e3 * Math.random()); e(this).data("colpickId", i); var n = e(t).attr("id", i); n.addClass("colpick_" + a.layout + (a.submit ? "" : " colpick_" + a.layout + "_ns")), "light" != a.colorScheme && n.addClass("colpick_" + a.colorScheme), n.find("div.colpick_submit").html(a.submitText).click(k), a.fields = n.find("input").change(v).blur(f).focus(g), n.find("div.colpick_field_arrs").mousedown(h).end().find("div.colpick_current_color").click(H), a.selector = n.find("div.colpick_color").on("mousedown touchstart", P), a.selectorIndic = a.selector.find("div.colpick_selector_outer"), a.el = this, a.hue = n.find("div.colpick_hue_arrs"), huebar = a.hue.parent(); var s = navigator.userAgent.toLowerCase(), y = "Microsoft Internet Explorer" === navigator.appName, b = y ? parseFloat(s.match(/msie ([0-9]{1,}[\.0-9]{0,})/)[1]) : 0, B = y && b < 10, C = ["#ff0000", "#ff0080", "#ff00ff", "#8000ff", "#0000ff", "#0080ff", "#00ffff", "#00ff80", "#00ff00", "#80ff00", "#ffff00", "#ff8000", "#ff0000"]; if (B) { var A, x; for (A = 0; A <= 11; A++) x = e("<div></div>").attr("style", "height:8.333333%; filter:progid:DXImageTransform.Microsoft.gradient(GradientType=0,startColorstr=" + C[A] + ", endColorstr=" + C[A + 1] + '); -ms-filter: "progid:DXImageTransform.Microsoft.gradient(GradientType=0,startColorstr=' + C[A] + ", endColorstr=" + C[A + 1] + ')";'), huebar.append(x) } else stopList = C.join(","), huebar.attr("style", "background:-webkit-linear-gradient(top," + stopList + "); background: -o-linear-gradient(top," + stopList + "); background: -ms-linear-gradient(top," + stopList + "); background:-moz-linear-gradient(top," + stopList + "); -webkit-linear-gradient(top," + stopList + "); background:linear-gradient(to bottom," + stopList + "); "); n.find("div.colpick_hue").on("mousedown touchstart", S), a.newColor = n.find("div.colpick_new_color"), a.currentColor = n.find("div.colpick_current_color"), n.data("colpick", a), l(a.color, n.get(0)), r(a.color, n.get(0)), c(a.color, n.get(0)), m(a.color, n.get(0)), d(a.color, n.get(0)), u(a.color, n.get(0)), p(a.color, n.get(0)), a.flat ? (n.appendTo(this).show(), n.css({ position: "relative", display: "block" })) : (n.appendTo(document.body), e(this).on(a.showEvent, N), n.css({ position: "absolute" })) } }) }, showPicker: function () { return this.each(function () { e(this).data("colpickId") && N.apply(this) }) }, hidePicker: function () { return this.each(function () { e(this).data("colpickId") && e("#" + e(this).data("colpickId")).hide() }) }, setColor: function (t, a) { if (a = "undefined" == typeof a ? 1 : a, "string" == typeof t) t = i(t); else if (void 0 != t.r && void 0 != t.g && void 0 != t.b) t = n(t); else { if (void 0 == t.h || void 0 == t.s || void 0 == t.b) return this; t = M(t) } return this.each(function () { if (e(this).data("colpickId")) { var i = e("#" + e(this).data("colpickId")); i.data("colpick").color = t, i.data("colpick").origColor = t, l(t, i.get(0)), r(t, i.get(0)), c(t, i.get(0)), m(t, i.get(0)), d(t, i.get(0)), p(t, i.get(0)), i.data("colpick").onChange.apply(i.parent(), [t, s(t), o(t), i.data("colpick").el, 1]), a && u(t, i.get(0)) } }) } } }(), a = function (e) { var e = parseInt(e.indexOf("#") > -1 ? e.substring(1) : e, 16); return { r: e >> 16, g: (65280 & e) >> 8, b: 255 & e } }, i = function (e) { return n(a(e)) }, n = function (e) { var t = { h: 0, s: 0, b: 0 }, a = Math.min(e.r, e.g, e.b), i = Math.max(e.r, e.g, e.b), n = i - a; return t.b = i, t.s = 0 != i ? 255 * n / i : 0, 0 != t.s ? e.r == i ? t.h = (e.g - e.b) / n : e.g == i ? t.h = 2 + (e.b - e.r) / n : t.h = 4 + (e.r - e.g) / n : t.h = -1, t.h *= 60, t.h < 0 && (t.h += 360), t.s *= 100 / 255, t.b *= 100 / 255, t }, o = function (e) { var t = {}, a = e.h, i = 255 * e.s / 100, n = 255 * e.b / 100; if (0 == i) t.r = t.g = t.b = n; else { var o = n, l = (255 - i) * n / 255, s = (o - l) * (a % 60) / 60; 360 == a && (a = 0), a < 60 ? (t.r = o, t.b = l, t.g = l + s) : a < 120 ? (t.g = o, t.b = l, t.r = o - s) : a < 180 ? (t.g = o, t.r = l, t.b = l + s) : a < 240 ? (t.b = o, t.r = l, t.g = o - s) : a < 300 ? (t.b = o, t.g = l, t.r = l + s) : a < 360 ? (t.r = o, t.g = l, t.b = o - s) : (t.r = 0, t.g = 0, t.b = 0) } return { r: Math.round(t.r), g: Math.round(t.g), b: Math.round(t.b) } }, l = function (t) { var a = [t.r.toString(16), t.g.toString(16), t.b.toString(16)]; return e.each(a, function (e, t) { 1 == t.length && (a[e] = "0" + t) }), a.join("") }, s = function (e) { return l(o(e)) }; e.fn.extend({ colpick: t.init, colpickHide: t.hidePicker, colpickShow: t.showPicker, colpickSetColor: t.setColor }), e.extend({ colpick: { rgbToHex: l, rgbToHsb: n, hsbToHex: s, hsbToRgb: o, hexToHsb: i, hexToRgb: a } }) }(jQuery);